{
  "version": 3,
  "sources": ["../node_modules/imba/src/imba/utils.imba", "../node_modules/imba/src/imba/scheduler.imba", "../node_modules/imba/src/imba/dom/flags.imba", "../node_modules/imba/src/imba/dom/context.imba", "../node_modules/imba/src/imba/dom/core.web.imba", "../node_modules/imba/src/imba/dom/fragment.imba", "../node_modules/imba/src/imba/dom/indexed-list.imba", "../node_modules/imba/src/imba/dom/component.imba", "../node_modules/imba/src/imba/dom/styles.imba", "../node_modules/imba/src/imba/dom/mount.imba", "../node_modules/imba/src/imba/events/keyboard.imba", "../node_modules/imba/src/imba/events/mouse.imba", "../node_modules/imba/src/imba/events/core.imba", "../node_modules/imba/src/imba/events/hotkey.shared.imba", "../node_modules/imba/src/imba/events/mousetrap.mjs", "../node_modules/imba/src/imba/events/hotkey.imba", "SpreadSheet.imba", "index.imba"],
  "sourcesContent": ["const dashRegex = /-./g\n\nexport class LazyProxy\n\tstatic def for getter\n\t\tnew Proxy({}, new self(getter))\n\n\tdef constructor getter\n\t\tgetter = getter\n\t\n\tget target\n\t\tgetter!\n\n\tdef get _, key\n\t\ttarget[key]\n\t\n\tdef set _, key, value\n\t\ttarget[key] = value\n\t\treturn true\n\nexport def proxy getter, placeholder = {}\n\tnew Proxy(placeholder, new LazyProxy(getter))\n\nexport def parseTime value\n\tlet typ = typeof value\n\tif typ == 'number'\n\t\treturn value\n\n\tif typ == 'string'\n\t\tif (/^\\d+fps$/).test(value)\n\t\t\treturn 1000 / parseFloat(value)\n\t\telif (/^([-+]?[\\d\\.]+)s$/).test(value)\n\t\t\treturn parseFloat(value) * 1000\n\t\telif (/^([-+]?[\\d\\.]+)ms$/).test(value)\n\t\t\treturn parseFloat(value)\n\t# throw or return NaN?\n\treturn null\n\t\n\nexport def serializeData data\n\tlet map = new Map\n\tlet arr = []\n\tlet logging = no\n\tlet replacer = do(key,value)\n\t\tif value and value.#type and key !== ''\n\t\t\tlet ref = map.get(value) # value[sym] ||= \"$${nr++}$$\"\n\t\t\tunless map.has(value)\n\t\t\t\tmap.set(value,ref = \"$${arr.length}$$\")\n\t\t\t\tarr.push(value)\n\t\t\treturn key == null ? value : ref\n\t\tvalue\n\n\tlet json = JSON.stringify(data,replacer,2)\n\tlet i = 0\n\tlogging = yes\n\twhile i < arr.length\n\t\tarr[i] = JSON.stringify(arr[i],replacer,2)\n\t\ti++\n\n\tlet inject = \"\"\n\tfor item,i in arr\n\t\tinject += \"\\\"$${i}$$\\\":{item},\\n\"\n\tjson = '{' + inject + json.slice(1)\n\treturn json\n\t\n\nexport def deserializeData data, reviver = null\n\tlet objects = {}\n\tlet reg = /\\$\\$\\d+\\$\\$/\n\tlet lookup = do(value)\n\t\treturn objects[value] ||= reviver ? reviver(value) : {}\n\n\tlet parser = do(key,value)\n\t\tif typeof value == 'string'\n\t\t\tif value[0] == '$' and reg.test(value)\n\t\t\t\treturn lookup(value)\n\t\telif typeof key == 'string' and key[0] == '$' and reg.test(key)\n\t\t\tlet obj = lookup(key)\n\t\t\tObject.assign(obj,value)\n\t\t\treturn obj\n\n\t\treturn value\n\n\tlet parsed = JSON.parse(data,parser)\n\treturn parsed\n\nexport def patchManifest prev, curr\n\tlet origs = {}\n\tlet diff = {\n\t\tadded: []\n\t\tchanged: []\n\t\tremoved: []\n\t\tall: []\n\t\turls: {}\n\t}\n\n\tif prev.assets\n\t\tfor item in prev.assets\n\t\t\tlet ref = item.originalPath or item.path\n\t\t\torigs[ref] = item\n\t\t\tif item.url\n\t\t\t\t# add old urls to the new manifest\n\t\t\t\tcurr.urls[item.url] ||= item\n\t\n\tfor item in (curr.assets or [])\n\t\tlet ref = item.originalPath or item.path\n\t\tlet orig = origs[ref]\n\n\t\tif item.url and prev.urls\n\t\t\tprev.urls[item.url] = item\n\n\t\tif orig\n\t\t\tif orig.hash != item.hash\n\t\t\t\torig.invalidated = Date.now!\n\t\t\t\torig.replacedBy = item\n\t\t\t\titem.replaces = orig\n\t\t\t\tdiff.changed.push(item)\n\t\t\t\tdiff.all.push(item)\n\n\t\t\t\tif orig == prev.main\n\t\t\t\t\tdiff.main = item\n\n\t\t\tdelete origs[ref]\n\t\telse\n\t\t\tdiff.added.push(item)\n\t\t\tdiff.all.push(item)\n\n\t# these are the items that are no longer referencd\n\tfor own path,item of origs\n\t\titem.removed = Date.now!\n\t\tdiff.all.push(item)\n\n\tfor item in diff.all\n\t\tlet typ = diff[item.type] ||= []\n\t\ttyp.push(item)\n\n\tdiff.removed = Object.values(origs)\n\tcurr.changes = diff\n\treturn curr\n\nexport def toCamelCase str\n\tif str.indexOf('-') >= 0\n\t\tstr.replace(dashRegex) do $1.charAt(1).toUpperCase!\n\telse\n\t\tstr\n\nexport def getDeepPropertyDescriptor item, key, stop\n\t\n\tif !item\n\t\treturn undefined\n\n\tlet desc = Object.getOwnPropertyDescriptor(item,key)\n\n\tif desc or item == stop\n\t\treturn desc or undefined\n\t\t\n\tgetDeepPropertyDescriptor(Reflect.getPrototypeOf(item),key,stop)\n\n# Basic events - move to separate file?\nconst emit__ = do(event, args, node)\n\tlet prev\n\tlet cb\n\tlet ret\n\n\twhile (prev = node) and (node = node.next)\n\t\tif cb = node.listener\n\t\t\tif node.path and cb[node.path]\n\t\t\t\tret = args ? cb[node.path].apply(cb,args) : cb[node.path]()\n\t\t\telse\n\t\t\t\t# check if it is a method?\n\t\t\t\tret = args ? cb.apply(node, args) : cb.call(node)\n\n\t\tif node.times && --node.times <= 0\n\t\t\tprev.next = node.next\n\t\t\tnode.listener = null\n\treturn\n\n# method for registering a listener on object\nexport def listen obj, event, listener, path\n\tlet cbs\n\tlet list\n\tlet tail\n\tcbs = obj.#__listeners__ ||= {}\n\tlist = cbs[event] ||= {}\n\ttail = list.tail || (list.tail = (list.next = {}))\n\ttail.listener = listener\n\ttail.path = path\n\tlist.tail = tail.next = {}\n\treturn tail\n\n# register a listener once\nexport def once obj, event, listener\n\tlet tail = listen(obj,event,listener)\n\ttail.times = 1\n\treturn tail\n\n# remove a listener\nexport def unlisten obj, event, cb, meth\n\tlet node\n\tlet prev\n\tlet meta = obj.#__listeners__\n\treturn unless meta\n\n\tif node = meta[event]\n\t\twhile (prev = node) and (node = node.next)\n\t\t\tif node == cb || node.listener == cb\n\t\t\t\tprev.next = node.next\n\t\t\t\t# check for correct path as well?\n\t\t\t\tnode.listener = null\n\t\t\t\tbreak\n\treturn\n\n# emit event\nexport def emit obj, event, params\n\tif let cb = obj.#__listeners__\n\t\temit__(event,params,cb[event]) if cb[event]\n\t\temit__(event,[event,params],cb.all) if cb.all\n\treturn", "# imba$imbaPath=global\nlet rAF = global.requestAnimationFrame || (do(blk) setTimeout(blk,1000 / 60))\nlet FPS = 60\nlet SPF = 1 / 60\n\t\t\n# Scheduler\nclass Scheduled\n\towner = null\n\ttarget = null\n\tactive = no\n\tvalue = undefined\n\tskip = 0\n\tlast = 0\n\n\tdef tick scheduler, source\n\t\tlast = owner.#frames\n\t\ttarget.tick(self, source)\n\t\t1\n\n\tdef update o, activate?\n\t\tlet on = active\n\t\tlet val = o.value\n\t\tlet changed = value != val\n\n\t\tif changed\n\t\t\tdeactivate!\n\t\t\tvalue = val\n\n\t\tif value or on or activate?\n\t\t\tactivate!\n\t\tself\n\n\tdef queue\n\t\towner.add(self)\n\t\treturn\n\n\tdef activate\n\t\tif value === yes\n\t\t\towner.on('commit',self)\n\t\telif value === no\n\t\t\tyes\n\t\telif typeof value == 'number'\n\t\t\t# duration\n\t\t\tlet tock = value / (1000 / 60)\n\t\t\tif tock <= 2\n\t\t\t\t# FIXME everything from 30 to 60 fps is treated as 60fps\n\t\t\t\towner.on('raf',self)\n\t\t\telse\n\t\t\t\t#interval = global.setInterval(queue.bind(self),value)\n\n\t\tactive = yes\n\t\tself\n\n\tdef deactivate\n\t\tif value === yes\n\t\t\towner.un('commit',self)\n\t\towner.un('raf',self)\n\n\t\tif #interval\n\t\t\tglobal.clearInterval(#interval)\n\t\t\t#interval = null\n\n\t\tactive = no\n\t\tself\n\nexport class Scheduler\n\tdef constructor\n\t\tid = Symbol!\n\t\tself.queue = []\n\t\tself.stage = -1\n\t\t#stage = -1\n\t\t#frames = 0\n\t\t#scheduled = no\n\t\t\n\t\tself.listeners = {}\n\t\tself.intervals = {}\n\t\tself.commit = do\n\t\t\tadd('commit')\n\t\t\treturn self\n\n\t\t#fps = 0\n\n\t\t$promise = null\n\t\t$resolve = null\n\t\t#ticker = do(e)\n\t\t\t#scheduled = no\n\t\t\tself.tick(e)\n\t\tself\n\n\tdef add item, force\n\t\tif force or self.queue.indexOf(item) == -1\n\t\t\tself.queue.push(item)\n\n\t\t#schedule! unless #scheduled\n\t\treturn self\n\t\n\tget committing?\n\t\tself.queue.indexOf('commit') >= 0\n\n\n\tdef listen ns, item\n\t\tlet set = listeners[ns]\n\t\tlet first = !set\n\t\tset ||= listeners[ns] = new Set\n\t\tset.add(item)\n\n\t\tadd('raf') if ns == 'raf' and first\n\t\tself\t\n\n\tdef unlisten ns, item\n\t\tlet set = listeners[ns]\n\t\tset && set.delete(item)\n\t\tif ns == 'raf' and set and set.size == 0\n\t\t\tdelete listeners.raf\n\t\tself\n\n\tdef on ns,item\n\t\tlisten(ns,item)\n\n\tdef un ns,item\n\t\tunlisten(ns,item)\n\n\tget promise\n\t\t$promise ||= new Promise do(resolve)\n\t\t\t$resolve = resolve\n\n\tdef tick timestamp\n\t\tlet items = self.queue\n\t\tlet frame = #frames++\n\t\tself.ts = timestamp unless self.ts\n\t\tself.dt = timestamp - self.ts\n\t\tself.ts = timestamp\n\t\tself.queue = []\n\t\t#stage = 1\n\n\t\t# calculate frames elapsed since last tick etc?\n\n\t\tif items.length\n\t\t\tfor item,i in items\n\t\t\t\tif typeof item === 'string' && listeners[item]\n\t\t\t\t\tlisteners[item].forEach do(listener)\n\t\t\t\t\t\tif listener.tick isa Function\n\t\t\t\t\t\t\tlistener.tick(self,item)\n\t\t\t\t\t\telif listener isa Function\n\t\t\t\t\t\t\tlistener(self,item)\n\t\t\t\telif item isa Function\n\t\t\t\t\titem(self.dt,self)\n\t\t\t\telif item.tick\n\t\t\t\t\titem.tick(self.dt,self)\n\n\t\t#stage = #scheduled ? 0 : -1\n\n\t\tif $promise\n\t\t\t$resolve(self)\n\t\t\t$promise = $resolve = null\n\n\t\tif listeners.raf and true\n\t\t\tadd('raf')\n\t\tself\n\n\tdef #schedule\n\t\tif !#scheduled\n\t\t\t#scheduled = yes\n\t\t\t#stage = 0 if #stage == -1\n\t\t\trAF(#ticker)\n\t\tself\n\n\tdef schedule item, o\n\t\to ||= (item[id] ||= {value: yes})\n\t\tlet state = o[id] ||= new Scheduled(owner: self, target: item)\n\t\tstate.update(o,yes)\n\n\tdef unschedule item, o = {}\n\t\to ||= item[id]\n\t\tlet state = o and o[id]\n\t\tif state and state.active\n\t\t\tstate.deactivate!\n\t\tself\n\nexport const scheduler = new Scheduler \n\nexport def commit\n\tscheduler.add('commit').promise\n\nexport def setTimeout fn,ms\n\tglobal.setTimeout(&,ms) do\n\t\tfn!\n\t\tcommit!\n\t\treturn\n\nexport def setInterval fn,ms\n\tglobal.setInterval(&,ms) do\n\t\tfn!\n\t\tcommit!\n\t\treturn\n\nexport const clearInterval = global.clearInterval\nexport const clearTimeout = global.clearTimeout\n\nlet instance = global.imba ||= {}\ninstance.commit = commit\ninstance.setTimeout = setTimeout\ninstance.setInterval = setInterval\ninstance.clearInterval = clearInterval\ninstance.clearTimeout = clearTimeout\n", "export class Flags\n\n\tdef constructor dom\n\t\tdom = dom\n\t\tstring = \"\"\n\n\tdef contains ref\n\t\treturn dom.classList.contains(ref)\n\n\tdef add ref\n\t\treturn self if contains(ref)\n\t\tstring += (string ? ' ' : '') + ref\n\t\tdom.classList.add(ref)\n\t\t# sync!\n\t\treturn self\n\n\tdef remove ref\n\t\treturn self unless contains(ref)\n\t\tlet regex = new RegExp('(^|\\\\s)*' + ref + '(\\\\s|$)*', 'g')\n\t\tstring = string.replace(regex, '')\n\t\tdom.classList.remove(ref)\n\t\t# sync!\n\t\treturn self\n\n\tdef toggle ref, bool\n\t\tbool = !contains(ref) if bool === undefined\n\t\tbool ? add(ref) : remove(ref)\n\t\t\n\tdef incr ref\n\t\tlet m = stacks\n\t\tlet c = m[ref] or 0\n\t\tadd(ref) if c < 1\n\t\treturn m[ref] = Math.max(c,0) + 1\n\t\n\tdef decr ref\n\t\tlet m = stacks\n\t\tlet c = m[ref] or 0\n\t\tremove(ref) if c == 1\n\t\treturn m[ref] = Math.max(c,1) - 1\n\n\tdef reconcile sym, str\n\t\tlet syms = #symbols\n\t\tlet vals = #batches\n\t\tlet dirty = yes\n\t\tunless syms\n\t\t\tsyms = #symbols = [sym]\n\t\t\tvals = #batches = [str or '']\n\t\t\tself.toString = self.valueOf = self.#toStringDeopt\n\t\telse\n\t\t\tlet idx = syms.indexOf(sym)\n\t\t\tlet val = str or ''\n\t\t\tif idx == -1\n\t\t\t\tsyms.push(sym)\n\t\t\t\tvals.push(val)\n\t\t\telif vals[idx] != val\n\t\t\t\tvals[idx] = val\n\t\t\telse\n\t\t\t\tdirty = no\n\t\t\n\t\tif dirty\n\t\t\t#extras = ' ' + vals.join(' ')\n\t\t\tsync!\n\t\treturn\n\n\tdef valueOf\n\t\tstring\n\n\tdef toString\n\t\tstring\n\n\tdef #toStringDeopt\n\t\tstring + (#extras or '')\n\n\tdef sync\n\t\tdom.flagSync$!\n\n\tget stacks\n\t\t#stacks ||= {}", "\n\nexport const renderContext = {\n\tcontext: null\n\n}\n\nclass Renderer\n\n\tstack = []\n\n\tdef push el\n\t\tstack.push(el)\n\n\tdef pop el\n\t\tstack.pop!\n\nexport const renderer = new Renderer\n\nexport class RenderContext < Map\n\tdef constructor parent,sym = null\n\t\tsuper()\n\t\tself._ = parent\n\t\tself.sym = sym\n\n\tdef pop\n\t\trenderContext.context = null\n\t\n\tdef #getRenderContext sym\n\t\tlet out = self.get(sym)\n\t\tout || self.set(sym,out = new RenderContext(self._,sym))\n\t\treturn renderContext.context = out\n\n\t\t# createRenderContext(self,sym)\n\tdef #getDynamicContext sym, key\n\t\t#getRenderContext(sym).#getRenderContext(key)\n\n\tdef run value\n\t\tself.value = value\n\t\trenderContext.context = null if renderContext.context == self\n\t\treturn self.get(value)\n\n\tdef cache val\n\t\tself.set(self.value,val)\n\t\treturn val\n\nexport def createRenderContext cache,key = Symbol!,up = cache\n\treturn renderContext.context = cache[key] ||= new RenderContext(up,key)\n\nexport def getRenderContext\n\tlet ctx = renderContext.context\n\tlet res = ctx or new RenderContext(null)\n\tif global.DEBUG_IMBA\n\t\tif !ctx and renderer.stack.length > 0\n\t\t\tconsole.warn \"detected unmemoized nodes in\",renderer.stack,\"see https://imba.io\",res\n\n\trenderContext.context = null if ctx\n\treturn res\n\t# {map:new Map}", "import {Flags} from './flags'\nimport {getDeepPropertyDescriptor} from '../utils'\nimport {RenderContext,createRenderContext} from './context'\n\nexport const {\n\tEvent,\n\tUIEvent,\n\tMouseEvent,\n\tPointerEvent,\n\tKeyboardEvent,\n\tCustomEvent,\n\tNode,\n\tComment,\n\tText,\n\tElement,\n\tHTMLElement,\n\tHTMLHtmlElement,\n\tHTMLSelectElement,\n\tHTMLInputElement,\n\tHTMLTextAreaElement,\n\tHTMLButtonElement,\n\tHTMLOptionElement,\n\tHTMLScriptElement,\n\tSVGElement,\n\tDocumentFragment,\n\tShadowRoot,\n\tDocument,\n\tWindow,\n\tcustomElements\n} = global.window\n\n\nconst descriptorCache = {}\ndef getDescriptor item,key,cache\n\tif !item\n\t\treturn cache[key] = null\n\n\tif cache[key] !== undefined\n\t\treturn cache[key]\n\t\n\tlet desc = Object.getOwnPropertyDescriptor(item,key)\n\n\tif desc !== undefined or item == SVGElement\n\t\treturn cache[key] = desc or null\n\n\tgetDescriptor(Reflect.getPrototypeOf(item),key,cache)\n\n# export const document = global.window.document\nconst CustomTagConstructors = {}\nconst CustomTagToElementNames = {}\nexport const TYPES = {}\nexport const CUSTOM_TYPES = {}\nexport def get_document\n\tglobal.document\n\nexport def use_window\n\tyes\n\n\n\n# Basic node extensions\n\nconst contextHandler =\n\tdef get target, name\n\t\tlet ctx = target\n\t\tlet val = undefined\n\t\twhile ctx and val == undefined\n\t\t\tif ctx = ctx.#parent\n\t\t\t\tval = ctx[name]\n\t\treturn val\n\n\tdef set target, name, value\n\t\tlet ctx = target\n\t\tlet val = undefined\n\t\twhile ctx and val == undefined\n\t\t\tlet desc = getDeepPropertyDescriptor(ctx,name,Element)\n\t\t\tif desc\n\t\t\t\tctx[name] = value\n\t\t\t\treturn yes\n\t\t\telse \n\t\t\t\tctx = ctx.#parent\n\t\treturn yes\n\nextend class Document\n\tget flags\n\t\tself.documentElement.flags\n\n\nextend class Node\n\tget #parent\n\t\t##parent or this.parentNode or ##up # FIX\n\n\tget #context\n\t\t##context ||= new Proxy(self,contextHandler)\n\n\tdef #__init__\n\t\tself\n\n\tdef #getRenderContext sym\n\t\tcreateRenderContext(self,sym)\n\n\tdef #getDynamicContext sym,key\n\t\t#getRenderContext(sym).#getRenderContext(key)\n\t\n\tdef #insertChild newnode, refnode\n\t\tnewnode.#insertInto(self,refnode)\n\t\n\tdef #appendChild newnode\n\t\tnewnode.#insertInto(self,null)\n\t\t\n\tdef #replaceChild newnode, oldnode\n\t\tlet res = #insertChild(newnode,oldnode)\n\t\t#removeChild(oldnode)\n\t\treturn res\n\t\t\n\tdef #removeChild node\n\t\tnode.#removeFrom(self)\n\n\t# can override if the element itself wants ot deal with this\n\tdef #insertInto parent, before = null\n\t\tif before\n\t\t\tparent.insertBefore(self,before)\n\t\telse\n\t\t\tparent.appendChild(self)\n\t\treturn self\n\t\t\n\tdef #insertIntoDeopt parent, before\n\t\t# log '#insertIntoDeopt',parent,before\n\t\tif before\n\t\t\tparent.insertBefore(#domNode or self,before)\n\t\telse\n\t\t\tparent.appendChild(#domNode or self)\n\t\treturn self\n\n\tdef #removeFrom parent\n\t\tparent.removeChild(self)\n\t\t\n\tdef #removeFromDeopt parent\n\t\tparent.removeChild(#domNode or self)\n\t\t\n\tdef #replaceWith other, parent\n\t\tparent.#replaceChild(other,self)\n\t\t\n\tdef #replaceWithDeopt other, parent\n\t\tparent.#replaceChild(other,#domNode or self)\n\n\tget #placeholderNode\n\t\t##placeholderNode ||= global.document.createComment(\"placeholder\")\n\n\tset #placeholderNode value\n\t\tlet prev = ##placeholderNode\n\t\t##placeholderNode = value\n\t\tif prev and prev != value and prev.parentNode\n\t\t\tprev.#replaceWith(value)\n\n\tdef #attachToParent\n\t\tlet ph = #domNode\n\t\tlet par = ph and ph.parentNode\n\t\tif ph and par and ph != self\n\t\t\t#domNode = null\n\t\t\t#insertInto(par,ph)\n\t\t\tph.#removeFrom(par)\n\t\tself\n\n\tdef #detachFromParent\n\t\tif #domDeopt =? yes\n\t\t\t#replaceWith = #replaceWithDeopt\n\t\t\t#removeFrom = #removeFromDeopt\n\t\t\t#insertInto = #insertIntoDeopt\n\n\t\tlet ph = #placeholderNode\n\t\tif parentNode and ph != self\n\t\t\tph.#insertInto(parentNode,self)\n\t\t\t#removeFrom(parentNode)\n\n\t\t#domNode = ph\n\t\t# self.#replaceWith(ph,parentNode)\n\t\tself\n\t\t\n\tdef #placeChild item, f, prev\n\t\t\n\t\tlet type = typeof item\n\t\t# console.log '#inserting!',item,f,prev,type\n\n\t\tif type === 'undefined' or item === null\n\t\t\t# what if the prev value was the same?\n\t\t\tif prev and prev isa Comment # check perf\n\t\t\t\treturn prev\n\n\t\t\tlet el = document.createComment('')\n\t\t\treturn prev ? prev.#replaceWith(el,self) : el.#insertInto(this,null)\n\n\t\t# dont reinsert again\n\t\tif item === prev\n\t\t\treturn item\n\n\t\t# what if this is null or undefined -- add comment and return? Or blank text node?\n\t\telif type !== 'object'\n\t\t\tlet res\n\t\t\tlet txt = item\n\t\t\t\n\t\t\tif (f & $TAG_FIRST_CHILD$) && (f & $TAG_LAST_CHILD$) and false\n\t\t\t\t# FIXME what if the previous one was not text? Possibly dangerous\n\t\t\t\t# when we set this on a fragment - it essentially replaces the whole\n\t\t\t\t# fragment?\n\t\t\t\t# log 'set textcontent raw',txt,prev\n\t\t\t\tself.textContent = txt\n\t\t\t\treturn\n\n\t\t\tif prev\n\t\t\t\tif prev isa Text # check perf\n\t\t\t\t\tprev.textContent = txt\n\t\t\t\t\treturn prev\n\t\t\t\telse\n\t\t\t\t\tres = document.createTextNode(txt)\n\t\t\t\t\tprev.#replaceWith(res,self)\n\t\t\t\t\treturn res\n\t\t\telse\n\t\t\t\tself.appendChild(res = document.createTextNode(txt))\n\t\t\t\treturn res\t\n\n\t\telse\n\t\t\tif global.DEBUG_IMBA\n\t\t\t\tif !item.#insertInto\n\t\t\t\t\tconsole.warn(\"Tried to insert\",item,\"into\",this)\n\t\t\t\t\tthrow new TypeError(\"Only DOM Nodes can be inserted into DOM\")\n\n\t\t\treturn prev ? prev.#replaceWith(item,this) : item.#insertInto(this,null)\n\t\treturn\n\n# Basic element extensions\nextend class Element\n\t\n\tdef log ...params\n\t\tconsole.log(...params)\n\t\tself\n\n\tdef emit name, detail, o = {bubbles: true, cancelable: true}\n\t\to.detail = detail if detail != undefined\n\t\tlet event = new CustomEvent(name, o)\n\t\tlet res = self.dispatchEvent(event)\n\t\treturn event\n\n\t# inline in files or remove all together?\n\tdef text$ item\n\t\tself.textContent = item\n\t\tself\n\t\n\tdef #beforeReconcile\n\t\tself\n\t\t\n\tdef #afterReconcile\n\t\tself\n\t\t\n\tdef #afterVisit\n\t\tself.render! if self.render\n\t\treturn\n\n\tget flags\n\t\tunless $flags\n\t\t\t# unless deopted - we want to first cache the extflags\n\t\t\t$flags = new Flags(self)\n\t\t\tif flag$ == Element.prototype.flag$\n\t\t\t\tflags$ext = self.className\n\t\t\tflagDeopt$()\n\t\treturn $flags\n\n\tdef flag$ str\n\t\t# Potentially slow\n\t\tlet ns = flags$ns\n\t\tself.className = ns ? (ns + (flags$ext = str)) : (flags$ext = str)\n\t\treturn\n\t\t\n\tdef flagDeopt$\n\t\tself.flag$ = self.flagExt$ # do(str) self.flagSync$(flags$ext = str)\n\t\tself.flagSelf$ = do(str) self.flagSync$(flags$own = str)\n\t\treturn\n\t\t\n\tdef flagExt$ str\n\t\tself.flagSync$(flags$ext = str)\n\n\tdef flagSelf$ str\n\t\t# if a tag receives flags from inside <self> we need to\n\t\t# redefine the flag-methods to later use both\n\t\tflagDeopt$()\n\t\treturn flagSelf$(str)\n\n\tdef flagSync$\n\t\tself.className = ((flags$ns or '') + (flags$ext or '') + ' ' + (flags$own || '') + ' ' + ($flags or ''))\n\t\t\n\tdef set$ key,value\n\t\t# FIXME relatively slow\n\t\tlet desc = getDeepPropertyDescriptor(this,key,Element)\n\t\tif !desc or !desc.set\n\t\t\tsetAttribute(key,value)\n\t\telse\n\t\t\tself[key] = value\n\t\treturn\n\t\t\n\tget richValue\n\t\tvalue\n\n\tset richValue value\n\t\tself.value = value\n\n# Element.prototype.set$ = Element.prototype.setAttribute\nElement.prototype.setns$ = Element.prototype.setAttributeNS\nElement.prototype.#isRichElement = yes\n\nexport def createElement name, parent, flags, text\n\tlet el = document.createElement(name)\n\t\t\n\tel.className = flags if flags\n\n\tif text !== null\n\t\tel.text$(text)\n\n\tif parent and parent.#appendChild\n\t\tparent.#appendChild(el)\n\t\t# el.#insertInto(parent)\n\n\treturn el\n\n\n\n\nextend class SVGElement\n\n\tdef set$ key,value\n\t\tlet cache = descriptorCache[nodeName] ||= {}\n\t\tlet desc = getDescriptor(this,key,cache)\n\n\t\tif !desc or !desc.set\n\t\t\tsetAttribute(key,value)\n\t\telse\n\t\t\tself[key] = value\n\t\treturn\n\n\tdef flag$ str\n\t\tlet ns = flags$ns\n\t\tself.setAttribute('class',ns ? (ns + (flags$ext = str)) : (flags$ext = str))\n\t\treturn\n\n\tdef flagSelf$ str\n\t\t# if a tag receives flags from inside <self> we need to\n\t\t# redefine the flag-methods to later use both\n\t\tself.flag$ = do(str) self.flagSync$(flags$ext = str)\n\t\tself.flagSelf$ = do(str) self.flagSync$(flags$own = str)\n\t\treturn flagSelf$(str)\n\n\tdef flagSync$\n\t\tself.setAttribute('class',(flags$ns or '') + (flags$ext or '') + ' ' + (flags$own || '') + ' ' + ($flags or ''))\n\n\nextend class SVGSVGElement\n\n\tset src value\n\t\tif #src =? value\n\t\t\tif value\n\t\t\t\tif value.adoptNode\n\t\t\t\t\tvalue.adoptNode(self)\n\t\t\t\telif value.content\n\t\t\t\t\tfor own k,v of value.attributes\n\t\t\t\t\t\tsetAttribute(k,v)\n\t\t\t\t\tinnerHTML = value.content\n\t\treturn\n\n\t\t\n\nexport def createSVGElement name, parent, flags, text, ctx\n\tlet el = document.createElementNS(\"http://www.w3.org/2000/svg\",name)\n\n\tif flags\n\t\tel.className.baseVal = flags\n\n\tif parent and parent.#appendChild\n\t\tparent.#appendChild(el) # .#appendChild(parent)\n\n\tif text\n\t\tel.textContent = text\n\n\treturn el\n\nexport def createComment text\n\tdocument.createComment(text)\n\nexport def createTextNode text\n\tdocument.createTextNode(text)\n\t\nexport def createFragment\n\tdocument.createDocumentFragment!\n\n\nconst navigator = global.navigator\nconst vendor = navigator and navigator.vendor or ''\nconst ua = navigator and navigator.userAgent or ''\n\nconst isSafari = vendor.indexOf('Apple') > -1 || ua.indexOf('CriOS') >= 0 || ua.indexOf('FxiOS') >= 0\nconst supportsCustomizedBuiltInElements = !isSafari\nconst CustomDescriptorCache = new Map\n\nclass CustomHook < HTMLElement\n\tdef connectedCallback\n\t\tif supportsCustomizedBuiltInElements\n\t\t\tparentNode.removeChild(self)\n\t\telse\n\t\t\tparentNode.connectedCallback!\n\n\tdef disconnectedCallback\n\t\tif !supportsCustomizedBuiltInElements\n\t\t\tparentNode.disconnectedCallback!\n\nwindow.customElements.define('i-hook',CustomHook)\n\ndef getCustomDescriptors el, klass\n\tlet props = CustomDescriptorCache.get(klass)\n\n\tunless props\n\t\tprops = {}\n\t\tlet proto = klass.prototype\n\t\tlet protos = [proto]\n\t\twhile proto = (proto and Object.getPrototypeOf(proto))\n\t\t\tbreak if proto.constructor == el.constructor\n\t\t\tprotos.unshift(proto)\n\n\t\tfor item in protos\n\t\t\tlet desc = Object.getOwnPropertyDescriptors(item)\n\t\t\tObject.assign(props,desc)\n\t\tCustomDescriptorCache.set(klass,props)\n\n\treturn props\n\n# Registry\nexport def createComponent name, parent, flags, text, ctx\n\t# the component could have a different web-components name?\n\tlet el\n\t\n\tif typeof name != 'string'\n\t\tif name and name.nodeName\n\t\t\tname = name.nodeName\n\n\tlet cmpname = CustomTagToElementNames[name] or name\n\n\tif CustomTagConstructors[name]\n\t\tlet cls = CustomTagConstructors[name]\n\t\tlet typ = cls.prototype.#htmlNodeName\n\t\tif typ and supportsCustomizedBuiltInElements\n\t\t\tel = document.createElement(typ,is: name)\n\t\telif cls.create$ and typ\n\t\t\tel = document.createElement(typ)\n\t\t\tel.setAttribute('is',cmpname)\n\t\t\tlet props = getCustomDescriptors(el,cls)\n\t\t\tObject.defineProperties(el,props)\n\t\t\tel.__slots = {}\n\t\t\t# check if we need a hook though?\n\t\t\tel.appendChild(document.createElement('i-hook'))\n\t\telif cls.create$\n\t\t\tel = cls.create$(el)\n\t\t\tel.__slots = {}\n\t\telse\n\t\t\tconsole.warn \"could not create tag {name}\"\n\telse\n\t\tel = document.createElement(CustomTagToElementNames[name] or name)\n\n\tel.##parent = parent\n\tel.#__init__!\n\n\tif text !== null\n\t\tel.#getSlot('__').text$(text)\n\t\t\n\tif flags or el.flags$ns # or nsflag\n\t\tel.flag$(flags or '')\n\treturn el\n\nexport def createDynamic value, parent, flags, text\n\tif value == null or value == undefined\n\t\treturn createComment('')\n\telif value isa Node\n\t\t# check if node already exists somewhere else in dom\n\t\treturn value\n\telif value.#isRichElement\n\t\treturn value\n\n\telif typeof value == 'string' or (value and value.prototype isa Node)\n\t\treturn createComponent(value,parent,flags,text)\n\n\n\nexport def getTagType name, klass\n\t# TODO follow same structure as ssr TYPES\n\tif TYPES[name]\n\t\treturn TYPES[name]\n\n\tif window[klass]\n\t\treturn window[klass]\n\n\tif window[name]\n\t\treturn window[name]\n\nexport def getSuperTagType name, klass, cmp\n\tlet typ = getTagType(name,klass)\n\tlet custom = typ == cmp or typ.prototype isa cmp or typ.prototype.#htmlNodeName\n\t\n\tif !custom\n\t\tlet cls = typ.prototype.#ImbaElement\n\n\t\tif !cls\n\t\t\tcls = class CustomBuiltInElement < typ\n\t\t\t\tdef constructor\n\t\t\t\t\tsuper\n\t\t\t\t\t__slots = {}\n\t\t\t\t\t__F = 0\n\n\t\t\ttyp.prototype.#ImbaElement = cls\n\t\t\tlet descriptors = Object.getOwnPropertyDescriptors(cmp.prototype)\n\t\t\tObject.defineProperties(cls.prototype,descriptors)\n\t\t\tcls.prototype.#htmlNodeName = name\n\n\t\treturn cls\n\n\treturn typ\n\nexport def defineTag name, klass, options = {}\n\tTYPES[name] = CUSTOM_TYPES[name] = klass\n\n\tklass.nodeName = name\n\n\tlet componentName = name\n\tlet proto = klass.prototype\n\n\tif name.indexOf('-') == -1\n\t\tcomponentName = \"{name}-tag\"\n\t\tCustomTagToElementNames[name] = componentName\n\n\t# if options.cssns\n\tif options.cssns\n\t\tlet ns = (proto._ns_ || proto.#cssns || '') + ' ' + (options.cssns or '')\n\t\tproto._ns_ = ns.trim! + ' '\n\t\tproto.#cssns = options.cssns\n\n\tif options.cssid\n\t\tlet ids = (proto.flags$ns || '') + ' ' + options.cssid\n\t\tproto.#cssid = options.cssid\n\t\tproto.flags$ns = ids.trim! + ' '\n\n\n\tif proto.#htmlNodeName and !options.extends\n\t\toptions.extends = proto.#htmlNodeName\n\n\tif options.extends\n\t\tproto.#htmlNodeName = options.extends\n\t\tCustomTagConstructors[name] = klass\n\n\t\tif supportsCustomizedBuiltInElements\n\t\t\twindow.customElements.define(componentName,klass,extends: options.extends)\n\telse\n\t\twindow.customElements.define(componentName,klass)\n\n\treturn klass\n\t\nlet instance = global.imba ||= {}\ninstance.document = global.document\n", "import {Text,createComment,createTextNode,Comment,Node} from './core'\nimport {Flags} from './flags'\n\nexport def use_slots\n\tyes\n\n\nexport class Fragment\n\t\n\tdef constructor\n\t\tchildNodes = []\n\t\t\n\tdef log ...params\n\t\treturn\n\t\t\n\tdef hasChildNodes\n\t\tfalse\n\n\tset #parent value\n\t\t##parent = value\n\n\tget #parent\n\t\t##parent or ##up\n\n\tget #isRichElement\n\t\tyes\n\n\tget flags\n\t\t##flags ||= new Flags(self)\n\n\tdef flagSync$\n\t\tself\n\n\tdef #afterVisit\n\t\tself\n\nlet counter = 0\n# like a list\nclass VirtualFragment < Fragment\n\tdef constructor flags, parent\n\t\tsuper\n\t\t##up = parent\n\t\tparentNode = null\n\t\t#domFlags = flags\n\t\tchildNodes = []\n\t\t#end = createComment('slot' + counter++)\n\t\t\n\t\tif parent\n\t\t\tparent.#appendChild(self)\n\n\tget #parent\n\t\t##parent or parentNode or ##up\n\t\n\tset textContent text\n\t\t#textContent = text\n\t\n\tget textContent\n\t\t#textContent\n\t\t\n\tdef hasChildNodes\n\t\tfor item in childNodes\n\t\t\tif item isa Fragment\n\t\t\t\treturn true if item.hasChildNodes!\n\t\t\tif item isa Comment\n\t\t\t\tyes\n\t\t\telif item isa Node\n\t\t\t\treturn true\n\n\t\t\t# unless item isa Comment\n\t\t\t#\treturn false\n\t\treturn false\n\t\t# #children.length == 0\n\t\t\n\tdef text$ item\n\t\tunless #textNode\n\t\t\t#textNode = #placeChild(item)\n\t\telse\n\t\t\t#textNode.textContent = item\n\t\treturn #textNode\n\t\t\n\tdef appendChild child\n\t\tif parentNode\n\t\t\tchild.#insertInto(parentNode,#end)\n\t\tchildNodes.push(child)\n\t\n\tdef #appendChild child\n\t\tif parentNode\n\t\t\tchild.#insertInto(parentNode,#end)\n\t\tchildNodes.push(child)\n\t\n\tdef insertBefore node,refnode\n\t\t# check if this should really happen?\n\t\tif parentNode\n\t\t\tparentNode.#insertChild(node,refnode)\n\t\tlet idx = childNodes.indexOf(refnode)\n\t\tif idx >= 0\n\t\t\tchildNodes.splice(idx,0,node)\n\t\treturn node\n\t\n\t\n\tdef #removeChild node\n\t\tif parentNode\n\t\t\tparentNode.#removeChild(node)\n\t\tlet idx = childNodes.indexOf(node)\n\t\tif idx >= 0\n\t\t\tchildNodes.splice(idx,1)\n\t\treturn\n\t\t\t\n\tdef #insertInto parent, before\n\t\t# console.log 'frag #insertInto',parent,before,#children\n\t\tlet prev = parentNode\n\n\t\tif parentNode =? parent\n\t\t\t# log '#insertInto',parent,prev,before,#end\n\t\t\t# what if before is a fragment etc?\n\t\t\tif #end\n\t\t\t\tbefore = #end.#insertInto(parent,before)\n\t\t\t# before = #end\n\t\t\tfor item in childNodes\n\t\t\t\titem.#insertInto(parent,before)\n\t\treturn self\n\t\t\n\tdef #replaceWith node, parent\n\t\t# log '#replaceWith',node,parent\n\t\t# what if this\n\t\t# log 'replaced with',node,parent\n\t\tlet res = node.#insertInto(parent,#end)\n\t\t#removeFrom(parent)\n\t\tres\n\t\n\tdef #insertChild node,refnode\n\t\tif parentNode\n\t\t\tinsertBefore(node,refnode or #end)\n\t\t\n\t\tif refnode\n\t\t\tlet idx = childNodes.indexOf(refnode)\n\t\t\t# console.log 'vfragment #insertChild',node,refnode,refnode == #end,idx,#children\n\t\t\tif idx >= 0\n\t\t\t\tchildNodes.splice(idx,0,node)\n\t\telse\n\t\t\tchildNodes.push(node)\n\t\treturn node\n\t\t\n\t\t\n\t\t# for item in #children\n\t\t# \titem.#removeFrom(parent)\n\t\n\tdef #removeFrom parent\n\t\tfor item in childNodes\n\t\t\t# log '#removeFrom',item,parent\n\t\t\titem.#removeFrom(parent)\n\t\t#end.#removeFrom(parent) if #end\n\t\tparentNode = null\n\t\tself\n\n\tdef #placeChild item, f, prev\n\t\tlet par = parentNode\n\t\tlet type = typeof item\n\t\t\n\t\tif type === 'undefined' or item === null\n\t\t\tif prev and prev isa Comment # check perf\n\t\t\t\treturn prev\n\t\t\t\n\t\t\tlet el = createComment('')\n\t\t\t\n\t\t\tif prev\n\t\t\t\tlet idx = childNodes.indexOf(prev)\n\t\t\t\tchildNodes.splice(idx,1,el)\n\t\t\t\tif par\n\t\t\t\t\tprev.#replaceWith(el,par)\n\t\t\t\t# parentNode.#insert(item,f,prev or #end)\n\t\t\t\treturn el\n\t\t\t\n\t\t\t\n\t\t\tchildNodes.push(el)\n\t\t\tel.#insertInto(par,#end) if par\n\t\t\treturn el\n\t\t\t# return prev ? prev.#replaceWith(el,self) : el.#insertInto(this,null)\n\n\t\tif item === prev\n\t\t\treturn item\n\t\t\t\n\t\tif type !== 'object'\n\t\t\tlet res\n\t\t\tlet txt = item\n\n\t\t\tif prev\n\t\t\t\tif prev isa Text # check perf\n\t\t\t\t\tprev.textContent = txt\n\t\t\t\t\treturn prev\n\t\t\t\telse\n\t\t\t\t\tres = createTextNode(txt)\n\t\t\t\t\tlet idx = childNodes.indexOf(prev)\n\t\t\t\t\tchildNodes.splice(idx,1,res)\n\t\t\t\t\tprev.#replaceWith(res,par) if par\n\t\t\t\t\treturn res\n\t\t\telse\n\t\t\t\tchildNodes.push(res = createTextNode(txt))\n\t\t\t\t# self.appendChild$(res = createTextNode(txt))\n\t\t\t\tres.#insertInto(par,#end) if par\n\t\t\t\treturn res\n\n\t\telif prev\n\t\t\tlet idx = childNodes.indexOf(prev)\n\t\t\tchildNodes.splice(idx,1,item)\n\t\t\tprev.#replaceWith(item,par) if par\n\t\t\treturn item\n\t\telse\n\t\t\tchildNodes.push(item)\n\t\t\titem.#insertInto(par,#end) if par\n\t\t\treturn item\n\n\nexport def createLiveFragment bitflags, par\n\tconst el = new VirtualFragment(bitflags, par)\n\treturn el\n\t\nexport def createSlot bitflags, par\n\tconst el = new VirtualFragment(bitflags, null)\n\tel.##up = par\n\t# el.setup$(bitflags, options)\n\t# el.##up = par if par\n\treturn el\n\nextend class Node\n\tdef #registerFunctionalSlot name\n\t\tlet map = #functionalSlots ||= {}\n\t\tmap[name] ||= createSlot(0,self)\n\t\n\tdef #getFunctionalSlot name, context\n\t\tlet map = #functionalSlots\n\t\treturn map and map[name] or #getSlot(name,context)\n\n\tdef #getSlot name, context\n\t\tif name == '__' and !self.render\n\t\t\treturn self\n\t\t\n\t\treturn __slots[name] ||= createSlot(0,self)", "import {createComment} from './core'\nimport {Fragment} from './fragment'\n\nclass IndexedTagFragment < Fragment\n\n\tdef constructor f, parent\n\t\tsuper\n\t\t#domFlags = f\n\t\t##parent = parent\n\n\t\tunless f & $TAG_LAST_CHILD$\n\t\t\t#end = createComment('list')\n\t\t\t# #end.node = self\n\t\t\t\n\t\tself.$ = childNodes\n\t\tself.length = 0\n\t\t\t\n\t\tif parent\n\t\t\tparent.#appendChild(self)\n\t\t\t\n\tdef hasChildNodes\n\t\treturn false if length == 0\n\t\treturn true\n\n\n\tdef #afterVisit len\n\t\tlet from = self.length\n\t\tself.length = len\n\n\t\treturn if from == len\n\t\tlet par = parentNode\n\t\treturn if !par\n\n\t\tlet array = self.childNodes\n\t\tlet end = #end\n\n\t\tif from > len\n\t\t\twhile from > len\n\t\t\t\tpar.#removeChild(array[--from])\n\t\telif len > from\n\t\t\twhile len > from\n\t\t\t\t# console.log 'inserting before now',array[from]\n\t\t\t\tpar.#insertChild(array[from++],end)\n\t\tself.length = len\n\t\treturn\n\t\t\n\tdef #insertInto parent, before\n\t\tparentNode = parent\n\t\t\n\t\t# if parent isa Node\n\t\t# FIXME need to work with non-dom elements as well\n\t\tif #end\n\t\t\t#end.#insertInto(parent,before)\n\t\t\t\n\t\tbefore = #end\n\n\t\tfor item,i in childNodes\n\t\t\tbreak if i == self.length\n\t\t\t# log 'insert child',parent,item,before\n\t\t\titem.#insertInto(parent,before)\n\t\t\t# log 'insert child',parent,item,before,parent.innerHTML\n\t\treturn self\n\t\t\n\tdef #appendChild item\n\t\t# this should be a noop\n\t\t# log 'list #appendChild',item\n\t\treturn\n\t\t\n\t\t\n\tdef #replaceWith rel, parent\n\t\tlet res = rel.#insertInto(parent,#end)\n\t\t#removeFrom(parent)\n\t\treturn res\n\t\n\tdef #removeFrom parent\n\t\t# log '#removeFrom',parent\n\t\tlet i = length\n\t\twhile i > 0\n\t\t\tlet el = childNodes[--i]\n\t\t\tel.#removeFrom(parent)\n\t\t\t# parent.#removeChild(el)\n\t\tparent.removeChild(#end) if #end\n\t\tparentNode = null\n\t\treturn\n\nexport def createIndexedList bitflags, parent\n\treturn new IndexedTagFragment(bitflags,parent)\n", "import {Node,HTMLElement,CUSTOM_TYPES} from './core'\nimport {createLiveFragment,createSlot} from './fragment'\nimport {scheduler} from '../scheduler'\n\nimport {renderer} from './context'\n\nconst hydrator = new class\n\titems = []\n\tcurrent = null\n\tlastQueued = null\n\ttests = 0\n\n\tdef flush\n\t\tlet item = null\n\n\t\tif false\n\t\t\tconsole.log 'flush hydrate',items,tests\n\t\t\tfor item,i in items\n\t\t\t\tlet next = items[i + 1]\n\t\t\t\tif next\n\t\t\t\t\tunless next.compareDocumentPosition(item) & Node.DOCUMENT_POSITION_PRECEDING\n\t\t\t\t\t\tconsole.log \"WRONG ORDER!!!\",item,next,next.compareDocumentPosition(item)\n\n\t\twhile item = items.shift!\n\t\t\tcontinue if !item.parentNode or item.hydrated?\n\t\t\t# Mark as inited to stop connectedCallback from early exit\n\t\t\tlet prev = current\n\t\t\tcurrent = item\n\t\t\titem.__F |= $EL_SSR$\n\t\t\titem.connectedCallback!\n\t\t\tcurrent = prev\n\t\treturn\n\n\tdef queue item\n\t\t# let len = items.push(item)\n\t\tlet len = items.length\n\t\tlet idx = 0\n\t\tlet prev = lastQueued\n\t\tlastQueued = item\n\n\t\tlet BEFORE = Node.DOCUMENT_POSITION_PRECEDING\n\t\tlet AFTER = Node.DOCUMENT_POSITION_FOLLOWING\n\n\t\tif len\n\t\t\tlet prevIndex = items.indexOf(prev)\n\t\t\tlet index = prevIndex\n\n\t\t\tlet compare = do(a,b)\n\t\t\t\ttests++\n\t\t\t\ta.compareDocumentPosition(b)\n\n\t\t\tif prevIndex == -1 or prev.nodeName != item.nodeName\n\t\t\t\tindex = prevIndex = 0\n\n\t\t\tlet curr = items[index]\n\n\t\t\twhile curr and compare(curr,item) & AFTER\n\t\t\t\tcurr = items[++index]\n\n\t\t\tif index != prevIndex\n\t\t\t\tcurr ? items.splice(index,0,item) : items.push(item)\n\t\t\telse\n\t\t\t\twhile curr and compare(curr,item) & BEFORE\n\t\t\t\t\tcurr = items[--index]\n\t\t\t\tif index != prevIndex\n\t\t\t\t\tcurr ? items.splice(index + 1,0,item) : items.unshift(item)\n\t\telse\n\t\t\titems.push(item)\n\t\t\tglobal.queueMicrotask(flush.bind(self)) if !current\n\n\t\treturn\n\n\tdef run item\n\t\treturn if active\n\t\t# look for parents that are still hydrated\n\t\t# only the ssr elements that are not yet awakened\n\t\tactive = yes\n\t\t# let all = global.document.getElementsByClassName('__ssr')\n\t\tlet all = global.document.querySelectorAll('.__ssr')\n\t\tconsole.log 'running hydrator',item,all.length,Array.from(all)\n\n\t\tfor item in all\n\t\t\titem.#count ||= 1\n\t\t\titem.#count++\n\t\t\tlet name = item.nodeName\n\t\t\tlet typ = map[name] ||= global.window.customElements.get(name.toLowerCase!) or HTMLElement\n\t\t\tconsole.log 'item type',name,typ,!!CUSTOM_TYPES[name.toLowerCase!]\n\t\t\t# console.log 'hydrate??',item.constructor\n\t\t\tcontinue if !item.connectedCallback or !item.parentNode or item.hydrated?\n\t\t\tconsole.log 'hydrate',item # !!item.parentNode,item,item.connectedCallback\n\t\t\t# item.connectedCallback!\n\n\t\tactive = no\n\nexport def hydrate\n\thydrator.flush!\n\nexport class Component < HTMLElement\n\tdef constructor\n\t\tsuper()\n\t\tif flags$ns\n\t\t\t# explain?\n\t\t\tflag$ = flagExt$\n\n\t\tsetup$()\n\t\tbuild()\n\n\tdef setup$\n\t\t__slots = {}\n\t\t__F = 0\n\n\tdef #__init__\n\t\t__F |= ($EL_INITED$ | $EL_HYDRATED$)\n\t\tself\n\t\t\n\tdef flag$ str\n\n\t\tself.className = flags$ext = str\n\t\treturn\n\n\t# called immediately after construction \n\tdef build\n\t\tself\n\n\t# called before the first mount\n\tdef awaken\n\t\tself\n\t\n\t# called when element is attached to document\n\tdef mount\n\t\tself\n\t\n\t# called when element is detached from document\n\tdef unmount\n\t\tself\n\n\t# called after render\n\tdef rendered\n\t\tself\n\n\t# called before element is stringified on server (SSR)\n\tdef dehydrate\n\t\tself\n\n\t# called before awaken if element was not initially created via imba - on the client\n\tdef hydrate\n\t\t# should only autoschedule if we are not awakening inside a parent context that\n\t\tautoschedule = yes\n\t\tself\n\n\tdef tick\n\t\tcommit()\n\n\t# called when component is (re-)rendered from its parent\n\tdef visit\n\t\tcommit()\n\n\t# Wrapper for rendering. Default implementation\n\tdef commit\n\t\tunless render?\n\t\t\t__F |= $EL_UNRENDERED$\n\t\t\treturn self\n\t\t__F |= $EL_RENDERING$ \n\t\trender && render()\n\t\trendered()\n\t\t__F = (__F | $EL_RENDERED$) & ~$EL_RENDERING$ & ~$EL_UNRENDERED$\n\n\tget autoschedule\n\t\t(__F & $EL_SCHEDULE$) != 0\n\t\n\tset autoschedule value\n\t\tvalue ? (__F |= $EL_SCHEDULE$) : (__F &= ~$EL_SCHEDULE$)\n\n\t###\n\tNaming and accepted values will likely change - experimental\n\n\tyes = render on events / imba.commit\n\tno = force manual render\n\tnull / undefined = render via parent\n\t(n)s = render every n s\n\t(n)ms = render every n ms\n\t(n)fps = render n times per second\n\t###\n\tset autorender value\n\t\tlet o = #autorender ||= {}\n\t\to.value = value\n\t\tscheduler.schedule(self,o) if mounted?\n\t\treturn\n\n\tget render?\n\t\treturn !suspended?\n\n\tget mounting?\n\t\treturn (__F & $EL_MOUNTING$) != 0\n\n\tget mounted?\n\t\treturn (__F & $EL_MOUNTED$) != 0\n\t\n\tget awakened?\n\t\treturn (__F & $EL_AWAKENED$) != 0\n\t\n\tget rendered?\n\t\treturn (__F & $EL_RENDERED$) != 0\n\n\tget suspended?\n\t\treturn (__F & $EL_SUSPENDED$) != 0\n\n\tget rendering?\n\t\treturn (__F & $EL_RENDERING$) != 0\n\t\n\tget scheduled?\n\t\treturn (__F & $EL_SCHEDULED$) != 0\n\n\tget hydrated?\n\t\treturn (__F & $EL_HYDRATED$) != 0\n\n\tget ssr?\n\t\treturn (__F & $EL_SSR$) != 0\n\n\tdef schedule\n\t\tscheduler.on('commit',self)\n\t\t__F |= $EL_SCHEDULED$\n\t\treturn self\n\n\tdef unschedule\n\t\tscheduler.un('commit',self)\n\t\t__F &= ~$EL_SCHEDULED$\n\t\treturn self\n\n\tdef suspend cb = null\n\t\tlet val = flags.incr('_suspended_')\n\t\t__F |= $EL_SUSPENDED$\n\t\tif cb isa Function\n\t\t\tawait cb()\n\t\t\tunsuspend!\n\t\tself\n\n\tdef unsuspend\n\t\tlet val = flags.decr('_suspended_')\n\t\tif val == 0\n\t\t\t__F &= ~$EL_SUSPENDED$\n\t\t\tcommit! if $EL_UNRENDERED$\n\n\t\tself\n\t\t\n\tdef #afterVisit\n\t\tvisit()\n\n\tdef #beforeReconcile\n\t\tif __F & $EL_SSR$\n\t\t\t__F = __F & ~$EL_SSR$\n\t\t\t# remove flag\n\t\t\t# not if ssr?!\n\t\t\tclassList.remove('_ssr_')\n\t\t\tif flags$ext and flags$ext.indexOf('_ssr_') == 0\n\t\t\t\tflags$ext = flags$ext.slice(5)\n\t\t\t# TODO document this behaviour\n\t\t\tinnerHTML = '' unless __F & $EL_RENDERED$\n\n\t\tif global.DEBUG_IMBA\n\t\t\trenderer.push(self)\n\t\tself\n\n\tdef #afterReconcile\n\t\tif global.DEBUG_IMBA\n\t\t\trenderer.pop(self)\n\t\tself\n\n\n\tdef connectedCallback\n\t\tlet flags = __F\n\t\tlet inited = flags & $EL_INITED$\n\t\tlet awakened = flags & $EL_AWAKENED$\n\n\t\tif !inited and !(flags & $EL_SSR$)\n\t\t\thydrator.queue(self)\n\t\t\treturn\n\n\t\t# return if we are already in the process of mounting - or have mounted\n\t\tif flags & ($EL_MOUNTING$ | $EL_MOUNTED$)\n\t\t\treturn\n\t\t\n\t\t__F |= $EL_MOUNTING$\n\n\t\tunless inited\n\t\t\t#__init__!\n\n\t\tunless flags & $EL_HYDRATED$\n\t\t\t# clearly seems wrong?\n\t\t\tflags$ext = className\n\t\t\t__F |= $EL_HYDRATED$\n\t\t\tself.hydrate()\n\t\t\tcommit()\n\n\t\tunless awakened\n\t\t\tawaken()\n\t\t\t__F |= $EL_AWAKENED$\n\n\t\tlet res = mount()\n\t\tif res && res.then isa Function\n\t\t\tres.then(scheduler.commit)\n\n\t\tflags = __F = (__F | $EL_MOUNTED$) & ~$EL_MOUNTING$\n\t\t\n\t\tif flags & $EL_SCHEDULE$\n\t\t\tschedule()\n\t\t\n\t\t\n\t\tscheduler.schedule(self,#autorender) if #autorender\n\t\treturn this\n\n\tdef disconnectedCallback\n\t\t__F = __F & (~$EL_MOUNTED$ & ~$EL_MOUNTING$)\n\t\tif __F & $EL_SCHEDULED$\n\t\t\t# trigger potential unschedule listeners\n\t\t\tunschedule()\n\n\t\tunmount()\n\t\tscheduler.unschedule(self,#autorender) if #autorender\n\n# Backwards compatibility\nexport const ImbaElement = Component", "import {Element} from './core'\n\n# imba$imbaPath=global\nconst VALID_CSS_UNITS = {\n\tcm:1\n\tmm:1\n\tQ:1\n\tpc:1\n\tpt:1\n\tpx:1\n\tem:1\n\tex:1\n\tch:1\n\trem:1\n\tvw:1\n\tvh:1\n\tvmin:1\n\tvmax:1\n\ts:1\n\tms:1\n\tfr:1\n\t'%':1\n\t'in':1\n\tturn:1\n\tgrad:1\n\trad:1\n\tdeg:1\n\tHz:1\n\tkHz:1\n}\n\nconst CSS_DEFAULT_UNITS = {\n\tx:'px'\n\ty:'px'\n\tz:'px'\n\trotate:'turn'\n}\n\nconst CSS_STR_PROPS = {\n\tprefix:1\n\tsuffix:1\n\tcontent:1\n}\n\n# hsl map of colors for runtime css coloring\nconst CSS_COLORS = {\n\trose:      [[356,100,97],[356,100,95],[353,96,90],[353,96,82],[351,95,71],[350,89,60],[347,77,50],[345,83,41],[343,80,35],[342,75,30]]\n\tpink:      [[327,73,97],[326,78,95],[326,85,90],[327,87,82],[329,86,70],[330,81,60],[333,71,51],[335,78,42],[336,74,35],[336,69,30]]\n\tfuchsia:   [[289,100,98],[287,100,95],[288,96,91],[291,93,83],[292,91,73],[292,84,61],[293,69,49],[295,72,40],[295,70,33],[297,64,28]]\n\tpurple:    [[270,100,98],[269,100,95],[269,100,92],[269,97,85],[270,95,75],[271,91,65],[271,81,56],[272,72,47],[273,67,39],[274,66,32]]\n\tviolet:    [[250,100,98],[251,91,95],[251,95,92],[252,95,85],[255,92,76],[258,90,66],[262,83,58],[263,70,50],[263,69,42],[264,67,35]]\n\tindigo:    [[226,100,97],[226,100,94],[228,96,89],[230,94,82],[234,89,74],[239,84,67],[243,75,59],[245,58,51],[244,55,41],[242,47,34]]\n\tblue:      [[214,100,97],[214,95,93],[213,97,87],[212,96,78],[213,94,68],[217,91,60],[221,83,53],[224,76,48],[226,71,40],[224,64,33]]\n\tsky: [[204,100,97],[204,94,94],[201,94,86],[199,95,74],[198,93,60],[199,89,48],[200,98,39],[201,96,32],[201,90,27],[202,80,24]]\n\tcyan:      [[183,100,96],[185,96,90],[186,94,82],[187,92,69],[188,86,53],[189,94,43],[192,91,36],[193,82,31],[194,70,27],[196,64,24]]\n\tteal:      [[166,76,97],[167,85,89],[168,84,78],[171,77,64],[172,66,50],[173,80,40],[175,84,32],[175,77,26],[176,69,22],[176,61,19]]\n\temerald:   [[152,81,96],[149,80,90],[152,76,80],[156,72,67],[158,64,52],[160,84,39],[161,94,30],[163,94,24],[163,88,20],[164,86,16]]\n\tgreen:     [[138,76,97],[141,84,93],[141,79,85],[142,77,73],[142,69,58],[142,71,45],[142,76,36],[142,72,29],[143,64,24],[144,61,20]]\n\tlime:      [[78,92,95],[80,89,89],[81,88,80],[82,85,67],[83,78,55],[84,81,44],[85,85,35],[86,78,27],[86,69,23],[88,61,20]]\n\tyellow:    [[55,92,95],[55,97,88],[53,98,77],[50,98,64],[48,96,53],[45,93,47],[41,96,40],[35,92,33],[32,81,29],[28,73,26]]\n\tamber:     [[48,100,96],[48,96,89],[48,97,77],[46,97,65],[43,96,56],[38,92,50],[32,95,44],[26,90,37],[23,83,31],[22,78,26]]\n\torange:    [[33,100,96],[34,100,92],[32,98,83],[31,97,72],[27,96,61],[25,95,53],[21,90,48],[17,88,40],[15,79,34],[15,75,28]]\n\tred:       [[0,86,97],[0,93,94],[0,96,89],[0,94,82],[0,91,71],[0,84,60],[0,72,51],[0,74,42],[0,70,35],[0,63,31]]\n\twarmer:  [[60,9,98],[60,5,96],[20,6,90],[24,6,83],[24,5,64],[25,5,45],[33,5,32],[30,6,25],[12,6,15],[24,10,10]]\n\twarm:  [[0,0,98],[0,0,96],[0,0,90],[0,0,83],[0,0,64],[0,0,45],[0,0,32],[0,0,25],[0,0,15],[0,0,9]]\n\tgray:      [[0,0,98],[240,5,96],[240,6,90],[240,5,84],[240,5,65],[240,4,46],[240,5,34],[240,5,26],[240,4,16],[240,6,10]]\n\tcool:  [[210,20,98],[220,14,96],[220,13,91],[216,12,84],[218,11,65],[220,9,46],[215,14,34],[217,19,27],[215,28,17],[221,39,11]]\n\tcooler:  [[210,40,98],[210,40,96],[214,32,91],[213,27,84],[215,20,65],[215,16,47],[215,19,35],[215,25,27],[217,33,17],[222,47,11]]\n\t\n}\n\nconst CSS_COLORS_REGEX = new RegExp(\"^({Object.keys(CSS_COLORS).join('|')})(\\\\d+(?:\\\\.\\\\d+)?)$\")\n\nconst CSS_PX_PROPS = /^([xyz])$/\nconst CSS_DIM_PROPS = /^([tlbr]|size|[whtlbr]|[mps][tlbrxy]?|[rcxy]?[gs])$/\n\nconst resets = '''*,::before,::after {\n\tbox-sizing: border-box;\n\tborder-width: 0;\n\tborder-style: solid;\n\tborder-color: currentColor;\n}'''\n\nclass Styles\n\tentries = {}\n\n\tdef register id, styles\n\t\tlet entry = entries[id]\n\n\t\tif !entry\n\t\t\tentry = entries[id] = {sourceId: id, css: styles}\n\n\t\t\tif !entries.resets\n\t\t\t\tregister('resets',resets)\n\n\t\t\tif $web$\n\t\t\t\tentry.node = document.createElement('style')\n\t\t\t\tentry.node.setAttribute('data-id',id)\n\t\t\t\tentry.node.textContent = entry.css\n\t\t\t\tdocument.head.appendChild(entry.node)\n\n\t\telif entry\n\t\t\t# if it was already registered - we update the content\n\t\t\t# and on the web \u2013 replace the actual styles\n\t\t\tentry.css = styles\n\t\t\tif entry.node\n\t\t\t\tentry.node.textContent = styles\n\t\treturn\n\n\tdef toString\n\t\tObject.values(entries).map(do $1.css).join('\\n\\n')\n\n\tdef toValue value, unit, key, param = null\n\t\tif CSS_STR_PROPS[key]\n\t\t\tvalue = String(value)\n\n\t\tlet typ = typeof value\n\t\t\t\n\t\tif typ == 'number'\n\t\t\tif !unit\n\t\t\t\tif CSS_PX_PROPS.test(key)\n\t\t\t\t\tunit = 'px'\n\t\t\t\telif CSS_DIM_PROPS.test(key)\n\t\t\t\t\tunit = 'u'\n\t\t\t\telif key == 'rotate'\n\t\t\t\t\tunit = 'turn'\n\t\t\t\t\tvalue = (value % 1).toFixed(4)\n\n\t\t\tif unit\n\t\t\t\tif VALID_CSS_UNITS[unit]\n\t\t\t\t\t# what if the unit is already set?\n\t\t\t\t\treturn value + unit\n\t\t\t\telif unit == 'u'\n\t\t\t\t\treturn value * 4 + 'px'\n\t\t\t\telse\n\t\t\t\t\treturn \"calc(var(--u_{unit},1px) * {value})\"\n\t\t\telse\n\t\t\t\tyes\t\n\t\t\t\n\t\telif typ == 'string'\n\t\t\tif key and CSS_STR_PROPS[key] and value[0] != '\"' and value[0] != \"'\"\n\t\t\t\tif value.indexOf('\"') >= 0\n\t\t\t\t\tif value.indexOf(\"'\") == -1\n\t\t\t\t\t\tvalue = \"'\" + value + \"'\"\n\t\t\t\t\telse\n\t\t\t\t\t\tno # do something here\n\t\t\t\telse\n\t\t\t\t\tvalue = '\"' + value + '\"'\n\n\t\t\tif let colormatch = value.match(CSS_COLORS_REGEX)\n\t\t\t\tlet color = CSS_COLORS[colormatch[1]]\n\t\t\t\tlet level = color[parseInt(colormatch[2])]\n\t\t\t\tlet a = '100%'\n\t\t\t\tif typeof param == 'number'\n\t\t\t\t\ta = param + '%'\n\t\t\t\telif typeof param == 'string'\n\t\t\t\t\ta = param\n\t\t\t\tif level\n\t\t\t\t\treturn \"hsla({level[0]},{level[1]}%,{level[2]}%,{a})\"\n\n\t\telif value and value.toStyleString isa Function\n\t\t\treturn value.toStyleString!\n\t\treturn value\n\t\t\n\tdef parseDimension val\n\t\tif typeof val == 'string'\n\t\t\tlet [m,num,unit] = val.match(/^([-+]?[\\d\\.]+)(%|\\w+)$/)\n\t\t\treturn [parseFloat(num),unit]\n\t\telif typeof val == 'number'\n\t\t\treturn [val]\n\nexport const styles = new Styles\nexport const colors = Object.keys(CSS_COLORS)\n\nexport def use_styles\n\tyes\n\nextend class Element\n\tdef css$ key, value, mods\n\t\tself.style[key] = value\n\t\t\n\tdef css$var name, value, unit, key, param = null\n\t\tlet cssval = styles.toValue(value,unit,key,param)\n\t\tself.style.setProperty(name,cssval)\n\t\treturn\n\n", "import {renderContext,RenderContext} from './context'\nimport {scheduler} from '../scheduler'\n\nexport def render blk, ctx = {}\n\tlet prev = renderContext.context\n\trenderContext.context = ctx\n\tlet res = blk(ctx)\n\tif renderContext.context == ctx\n\t\trenderContext.context = prev\n\treturn res\n\nexport def mount mountable, into\n\tif $node$\n\t\tconsole.warn \"imba.mount not supported on server\"\n\t\t# if mountable isa Function\t\n\t\t# console.log String(mountable)\n\t\treturn String(mountable)\n\n\tlet parent = into or global.document.body\n\tlet element = mountable\n\tif mountable isa Function\n\t\tlet ctx = new RenderContext(parent,null)\n\t\tlet tick = do\n\t\t\tlet prev = renderContext.context\n\t\t\trenderContext.context = ctx\n\t\t\tlet res = mountable(ctx)\n\t\t\tif renderContext.context == ctx\n\t\t\t\trenderContext.context = prev\n\t\t\treturn res\n\t\telement = tick()\n\t\t# TODO Allow unscheduling this?\n\t\tscheduler.listen('commit',tick)\n\telse\n\t\t# automatic scheduling of element\n\t\telement.__F |= $EL_SCHEDULE$\n\n\telement.#insertInto(parent)\n\treturn element\n\nexport def unmount el\n\tif el and el.#removeFrom\n\t\tel.#removeFrom(el.parentNode)\n\treturn el\n\t\t\nlet instance = global.imba ||= {}\ninstance.mount = mount\ninstance.unmount = unmount", "import {KeyboardEvent} from '../dom/core'\n\nexport def use_events_keyboard\n\tyes\n\nextend class KeyboardEvent\n\n\tdef @esc do keyCode == 27\n\tdef @tab do keyCode == 9\n\tdef @enter do keyCode == 13\n\tdef @space do keyCode == 32\n\tdef @up do keyCode == 38\n\tdef @down do keyCode == 40\n\tdef @left do keyCode == 37\n\tdef @right do keyCode == 39\n\tdef @del do keyCode == 8 or keyCode == 46\n\tdef @key code\n\t\tif typeof code == 'string'\n\t\t\treturn key == code\n\t\telif typeof code == 'number'\n\t\t\treturn keyCode == code", "import {MouseEvent} from '../dom/core'\n\nexport def use_events_mouse\n\tyes\n\nextend class MouseEvent\n\n\tdef @left do button == 0\n\n\tdef @middle do button == 1\n\n\tdef @right do button == 2\n\n\tdef @shift do !!shiftKey\n\n\tdef @alt do !!altKey\n\n\tdef @ctrl do !!ctrlKey\n\n\tdef @meta do !!metaKey\n\n\tdef @mod do\n\t\tlet nav = global.navigator.platform\n\t\t(/^(Mac|iPhone|iPad|iPod)/).test(nav or '') ? !!metaKey : !!ctrlKey", "# imba$imbaPath=global\nimport {Event,Element,KeyboardEvent,MouseEvent,CustomEvent} from '../dom/core'\nimport {listen,once,emit,unlisten,parseTime} from '../utils'\nimport {scheduler} from '../scheduler'\n\nimport {use_events_keyboard} from './keyboard'\nuse_events_keyboard!\n\nimport {use_events_mouse} from './mouse'\nuse_events_mouse!\n\nextend class CustomEvent\n\n\tdef #extendType kls\n\t\tlet ext = kls.#extendDescriptors ||= if true\n\t\t\tlet desc = Object.getOwnPropertyDescriptors(kls.prototype)\n\t\t\tdelete desc.constructor\n\t\t\tdesc\n\t\tObject.defineProperties(self,ext)\n\nextend class Event\n\n\tget #modifierState\n\t\t#context[#context.step] ||= {}\n\t\t\n\tget #sharedModifierState\n\t\t#context.handler[#context.step] ||= {}\n\t\t\n\t\t\n\tdef #onceHandlerEnd cb\n\t\tonce(#context,'end',cb)\n\t\t\n\tdef @sel selector\n\t\treturn !!target.matches(String(selector))\n\n\tdef @closest selector\n\t\treturn !!target.closest(String(selector))\n\n\tdef @log ...params\n\t\tconsole.info(...params)\n\t\treturn true\n\n\tdef @trusted\n\t\treturn !!isTrusted\n\n\tdef @if expr\n\t\treturn !!expr\n\n\tdef @wait time = 250\n\t\tnew Promise(do setTimeout($1,parseTime(time)))\n\n\tdef @self\n\t\treturn target == #context.element\n\t\n\tdef @cooldown time = 250\n\t\tlet o = #sharedModifierState\n\n\t\tif o.active\n\t\t\treturn no\n\n\t\to.active = yes\n\t\to.target = #context.element\n\t\to.target.flags.incr('cooldown')\n\n\t\t#onceHandlerEnd do\n\t\t\tsetTimeout(&,parseTime(time)) do\n\t\t\t\to.target.flags.decr('cooldown')\t\n\t\t\t\to.active = no\n\n\t\treturn yes\n\n\tdef @throttle time = 250\n\t\tlet o = #sharedModifierState\n\n\t\tif o.active\n\t\t\to.next(no) if o.next\n\n\t\t\treturn new Promise do(r)\n\t\t\t\to.next = do(val)\n\t\t\t\t\to.next = null\n\t\t\t\t\tr(val)\n\n\t\to.active = yes\n\t\to.el ||= #context.element\n\t\to.el.flags.incr('throttled')\n\n\t\tonce(#context,'end') do\n\t\t\tlet delay = parseTime(time)\n\n\t\t\to.interval = setInterval(&,delay) do\n\t\t\t\tif o.next\n\t\t\t\t\to.next(yes)\n\t\t\t\telse\n\t\t\t\t\tclearInterval(o.interval)\n\t\t\t\t\to.el.flags.decr('throttled')\n\t\t\t\t\to.active = no\n\t\t\t\treturn\n\n\t\treturn yes\n\n\tdef @debounce time = 250\n\t\tlet o = #sharedModifierState\n\t\tlet e = self\n\t\to.queue ||= []\n\t\to.queue.push(o.last = e)\n\t\tnew Promise do(resolve)\n\t\t\tsetTimeout(&,parseTime(time)) do\n\t\t\t\tif o.last == e\n\t\t\t\t\t# if this event is still the last\n\t\t\t\t\t# add the debounced queue to the event\n\t\t\t\t\t# and let the chain continue\n\t\t\t\t\te.debounced = o.queue\n\t\t\t\t\to.last = null\n\t\t\t\t\to.queue = []\n\t\t\t\t\tresolve(true)\n\t\t\t\telse\n\t\t\t\t\tresolve(false)\n\n\t# will add a css className to the element (or selector)\n\t# and keep it for the duration of the event handling,\n\t# or at least 250ms\n\tdef @flag name, sel\n\t\tconst {element,step,state,id,current} = #context\n\t\n\t\tlet el = sel isa Element ? sel : (sel ? element.closest(sel) : element)\n\n\t\treturn true unless el\n\n\t\t#context.commit = yes\n\t\n\t\tstate[step] = id\n\t\tel.flags.incr(name)\n\n\t\tlet ts = Date.now!\n\t\t\n\t\tonce(current,'end') do\n\t\t\tlet elapsed = Date.now! - ts\n\t\t\tlet delay = Math.max(250 - elapsed,0)\n\t\t\tsetTimeout(&,delay) do el.flags.decr(name)\n\n\t\treturn true\n\n\tdef @busy sel\n\t\t# TODO REMOVE\n\t\tself['\u03B1flag']('busy',sel)\n\n\tdef @mod name\n\t\t# TODO REMOVE\n\t\tself['\u03B1flag'](\"mod-{name}\",global.document.documentElement)\n\n\tdef @outside\n\t\tconst {handler} = #context\n\t\tif handler and handler.#self\n\t\t\treturn !handler.#self.parentNode.contains(target)\n\n\nexport const events = {}\n\nexport def use_events\n\tyes\n\n# could cache similar event handlers with the same parts\nexport class EventHandler\n\tdef constructor params,closure\n\t\tself.params = params\n\t\tself.closure = closure\n\n\tdef getHandlerForMethod el, name\n\t\treturn null unless el\n\t\tel[name] ? el : self.getHandlerForMethod(el.parentNode,name)\n\n\t# okay to auto-import these?\n\tdef emit name, ...params do emit(self,name,params)\n\tdef on name, ...params do listen(self,name,...params)\n\tdef once name, ...params do once(self,name,...params)\n\tdef un name, ...params do unlisten(self,name,...params)\n\t\t\n\tget passive?\n\t\tparams.passive\n\t\t\n\tget capture?\n\t\tparams.capture\n\t\t\n\tget silent?\n\t\tparams.silent\n\t\t\n\tget global?\n\t\tparams.global\n\n\tdef handleEvent event\n\t\tlet element = #target or event.currentTarget\n\t\tlet mods = self.params\n\t\t# let i = 0\n\t\t# let awaited = no\n\t\tlet error = null\n\t\tlet silence = mods.silence or mods.silent\n\t\t\n\t\tself.count ||= 0\n\t\tself.state ||= {}\n\n\t\tlet state = {\n\t\t\telement: element\n\t\t\tevent: event\n\t\t\tmodifiers: mods\n\t\t\thandler: this\n\t\t\tid: ++self.count\n\t\t\tstep: -1\n\t\t\tstate: self.state\n\t\t\tcommit: null\n\t\t\tcurrent: null\n\t\t}\n\t\t\n\t\t# console.log 'handling event',event.target,event.currentTarget\n\n\t\tstate.current = state\n\n\t\tif event.handle$mod\n\t\t\tif event.handle$mod.apply(state,mods.options or []) == false\n\t\t\t\treturn\n\n\t\tlet guard = Event[self.type + '$handle'] or Event[event.type + '$handle'] or event.handle$mod\n\t\t\t\n\t\tif guard and guard.apply(state,mods.options or []) == false\n\t\t\treturn\n\t\t\n\t\t# let object = state.proxy or event \n\t\t\n\t\tself.currentEvents ||= new Set\n\t\tself.currentEvents.add(event)\t\n\n\t\tfor own handler,val of mods\n\t\t\tstate.step++\n\n\t\t\tif handler[0] == '_'\n\t\t\t\tcontinue\n\n\t\t\tif handler.indexOf('~') > 0\n\t\t\t\thandler = handler.split('~')[0]\n\t\t\t\n\t\t\tlet modargs = null\n\t\t\tlet args = [event,state]\n\t\t\tlet res = undefined\n\t\t\tlet context = null\n\t\t\tlet m\n\t\t\tlet negated = no\n\t\t\tlet isstring = typeof handler == 'string'\n\t\t\t\n\t\t\tif handler[0] == '$' and handler[1] == '_' and val[0] isa Function\n\t\t\t\t# handlers should commit by default\n\t\t\t\thandler = val[0]\n\t\t\t\tstate.commit = yes unless handler.passive\n\t\t\t\targs = [event,state].concat(val.slice(1))\n\t\t\t\tcontext = element\n\t\t\t\t\n\n\t\t\t# parse the arguments\n\t\t\telif val isa Array\n\t\t\t\targs = val.slice()\n\t\t\t\tmodargs = args\n\n\t\t\t\tfor par,i in args\n\t\t\t\t\t# what about fully nested arrays and objects?\n\t\t\t\t\t# ought to redirect this\n\t\t\t\t\tif typeof par == 'string' && par[0] == '~' and par[1] == '$'\n\t\t\t\t\t\tlet name = par.slice(2)\n\t\t\t\t\t\tlet chain = name.split('.')\n\t\t\t\t\t\tlet value = state[chain.shift()] or event\n\n\t\t\t\t\t\tfor part,i in chain\n\t\t\t\t\t\t\tvalue = value ? value[part] : undefined\n\n\t\t\t\t\t\targs[i] = value\n\n\t\t\tif typeof handler == 'string' and m = handler.match(/^(emit|flag|mod|moved|pin|fit|refit|map|remap|css)-(.+)$/)\n\t\t\t\tmodargs = args = [] unless modargs\n\t\t\t\targs.unshift(m[2])\n\t\t\t\thandler = m[1]\n\n\t\t\tif handler == 'trap'\n\t\t\t\tevent.#stopPropagation = yes\n\t\t\t\tevent.stopImmediatePropagation()\n\t\t\t\tevent.#defaultPrevented = yes\n\t\t\t\tevent.preventDefault()\n\n\t\t\telif handler == 'stop'\n\t\t\t\tevent.#stopPropagation = yes\n\t\t\t\tevent.stopImmediatePropagation()\n\t\t\telif handler == 'prevent'\n\t\t\t\tevent.#defaultPrevented = yes\n\t\t\t\tevent.preventDefault()\n\t\t\telif handler == 'commit'\n\t\t\t\tstate.commit = yes\n\n\t\t\telif handler == 'once'\n\t\t\t\t# clean up bound data as well\n\t\t\t\telement.removeEventListener(event.type,self)\n\t\t\telif handler == 'options' or handler == 'silence' or handler == 'silent'\n\t\t\t\tcontinue\n\n\t\t\telif handler == 'emit'\n\t\t\t\tlet name = args[0]\n\t\t\t\tlet detail = args[1] # is custom event if not?\n\t\t\t\tlet e = new CustomEvent(name, bubbles: true, detail: detail) # : new Event(name)\n\t\t\t\te.originalEvent = event\n\t\t\t\tlet customRes = element.dispatchEvent(e)\n\n\t\t\telif typeof handler == 'string'\n\t\t\t\tif handler[0] == '!'\n\t\t\t\t\tnegated = yes\n\t\t\t\t\thandler = handler.slice(1)\n\n\t\t\t\tlet path = \"\u03B1{handler}\"\n\n\t\t\t\tlet fn = event[path]\n\t\t\t\tfn ||= (self.type and Event[self.type + '$' + handler + '$mod'])\n\t\t\t\tfn ||= event[handler + '$mod'] or Event[event.type + '$' + handler] or Event[handler + '$mod']\n\t\t\t\t\n\t\t\t\tif fn isa Function\n\t\t\t\t\thandler = fn\n\t\t\t\t\tcontext = state\n\t\t\t\t\targs = modargs or []\n\n\t\t\t\t\tif event[path]\n\t\t\t\t\t\tcontext = event\n\t\t\t\t\t\tevent.#context = state\n\n\t\t\t\t# should default to first look at closure - no?\n\t\t\t\telif handler[0] == '_'\n\t\t\t\t\thandler = handler.slice(1)\n\t\t\t\t\tcontext = self.closure\n\t\t\t\telse\n\t\t\t\t\t# TODO deprecate this functionality and warn about it?\n\t\t\t\t\tcontext = self.getHandlerForMethod(element,handler)\n\t\t\t\n\t\t\ttry\n\t\t\t\tif handler isa Function\n\t\t\t\t\tres = handler.apply(context or element,args)\n\t\t\t\telif context\n\t\t\t\t\tres = context[handler].apply(context,args)\n\n\t\t\t\tif res and res.then isa Function and res != scheduler.$promise\n\t\t\t\t\tscheduler.commit! if state.commit and !silence\n\t\t\t\t\tres = await res\n\t\t\tcatch e\n\t\t\t\terror = e\n\t\t\t\tbreak\n\n\t\t\tif negated and res === true\n\t\t\t\tbreak\n\t\t\tif !negated and res === false\n\t\t\t\tbreak\n\n\t\t\tstate.value = res\n\t\t\n\t\temit(state,'end',state)\n\n\t\tscheduler.commit! if state.commit and !silence\n\n\t\tself.currentEvents.delete(event)\n\t\tif self.currentEvents.size == 0\n\t\t\tself.emit('idle')\n\t\t# what if the result is a promise\n\t\t\n\t\tif error\n\t\t\tthrow error\n\n\t\treturn\n\n\n# Add methods to Element\nextend class Element\n\n\tdef on$ type, mods, scope\n\t\tlet check = 'on$' + type\n\t\tlet handler\n\n\t\thandler = new EventHandler(mods,scope)\n\n\t\tlet capture = mods.capture or no\n\t\tlet passive = mods.passive\n\n\t\tlet o = capture\n\n\t\tif passive\n\t\t\to = {passive: passive, capture: capture}\n\n\t\t# check if a custom handler exists for this type?\n\t\tif self[check] isa Function\n\t\t\thandler = self[check](mods,scope,handler,o)\n\t\telse\n\t\t\tself.addEventListener(type,handler,o)\n\t\treturn handler\n", "const labels = {\n\tesc: {mac: '\u238B'}\n\tenter: {mac: '\u21A9'}\n\tshift: {mac: '\u21E7'}\n\tcommand: '\u2318'\n\tmod: {mac: '\u2318', win: 'ctrl'}\n\tctrl: {mac: '\u2303'}\n\tmeta: {mac: '\u2318',win: 'win'}\n\toption: {mac: '\u2325', win: 'alt'}\n\talt: {mac: '\u2325', win: 'alt'}\n\tdel: '\u2326'\n\tbackspace: '\u232B'\n\tleft: {mac: '\u2192'}\n\tup: {mac: '\u2191'}\n\tdown: {mac: '\u2193'}\n\tright: {mac: '\u2190'}\n\tplus: {mac: '+'}\n\ttab: {mac: '\u21E5'}\n}\n\nconst cfg = {\n\twin: {\n\t\tsep: '+'\n\t\torder: ['meta','ctrl','mod','alt','option','shift'].reverse!\n\t}\n\tmac: {\n\t\tsep: ''\n\t\torder: ['ctrl','alt','option','shift','mod','command'].reverse!\n\t}\n}\n\ncfg.auto = cfg.win\n\nif $web$\n\tif (global.navigator.platform or '').match(/iPhone|iPod|iPad|Mac/)\n\t\tcfg.auto = cfg.mac\n\nconst cache = {}\n\nexport def format combo, platform = 'auto'\n\tlet key = \"{combo}:{platform}\"\n\treturn cache[key] if cache[key]\n\tlet o = cfg[platform] or cfg.win\n\t\n\tlet combos = combo.split(\" \").map do\n\t\tlet keys  = $1.split(\"+\")\n\t\tlet items = keys.sort(do o.order.indexOf($2) - o.order.indexOf($1) )\n\n\t\tlet strings = items.map do\n\t\t\tlet lbl = labels[$1] or $1\n\t\t\tlbl = typeof lbl == 'string' ? lbl : (lbl[platform] or $1)\n\t\t\tlbl = lbl[0].toUpperCase! + (lbl.slice(1) or '')\n\t\treturn strings\n\n\treturn cache[key] = combos\n\nexport def humanize combo, platform\n\tlet arr = format(combo,platform)\n\tlet o = cfg[platform] or cfg.win\n\tarr.#string ||= arr.map(do $1.join(o.sep)).join(' ')\n\nexport def htmlify combo, platform\n\tlet arr = format(combo,platform)\n\tlet o = cfg[platform] or cfg.win\n\tarr.#html ||= arr.map(do \"<kbd>\" + $1.map(do \"<kbd>{$1}</kbd>\").join('') + '</kbd>' ).join(' ')", "/**\n * Copyright 2012-2017 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.1\n * @url craig.is/killing/mice\n */\n/**\n * mapping of special keycodes to their corresponding keys\n *\n * everything in this dictionary cannot use keypress events\n * so it has to be here to map to the correct keycodes for\n * keyup/keydown events\n *\n * @type {Object}\n */\nvar _MAP = {\n  8: \"backspace\",\n  9: \"tab\",\n  13: \"enter\",\n  16: \"shift\",\n  17: \"ctrl\",\n  18: \"alt\",\n  20: \"capslock\",\n  27: \"esc\",\n  32: \"space\",\n  33: \"pageup\",\n  34: \"pagedown\",\n  35: \"end\",\n  36: \"home\",\n  37: \"left\",\n  38: \"up\",\n  39: \"right\",\n  40: \"down\",\n  45: \"ins\",\n  46: \"del\",\n  91: \"meta\",\n  93: \"meta\",\n  224: \"meta\",\n};\n\n/**\n * mapping for special characters so they can support\n *\n * this dictionary is only used incase you want to bind a\n * keyup or keydown event to one of these keys\n *\n * @type {Object}\n */\nvar _KEYCODE_MAP = {\n  106: \"*\",\n  107: \"+\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\",\n};\n\n/**\n * this is a mapping of keys that require shift on a US keypad\n * back to the non shift equivelents\n *\n * this is so you can use keyup events with these keys\n *\n * note that this will only work reliably on US keyboards\n *\n * @type {Object}\n */\nvar _SHIFT_MAP = {\n  \"~\": \"`\",\n  \"!\": \"1\",\n  \"@\": \"2\",\n  \"#\": \"3\",\n  $: \"4\",\n  \"%\": \"5\",\n  \"^\": \"6\",\n  \"&\": \"7\",\n  \"*\": \"8\",\n  \"(\": \"9\",\n  \")\": \"0\",\n  _: \"-\",\n  \"+\": \"=\",\n  \":\": \";\",\n  '\"': \"'\",\n  \"<\": \",\",\n  \">\": \".\",\n  \"?\": \"/\",\n  \"|\": \"\\\\\",\n};\n\n/**\n * this is a list of special strings you can use to map\n * to modifier keys when you specify your keyboard shortcuts\n *\n * @type {Object}\n */\nvar _SPECIAL_ALIASES = {\n  option: \"alt\",\n  command: \"meta\",\n  return: \"enter\",\n  escape: \"esc\",\n  plus: \"+\",\n  mod: /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? \"meta\" : \"ctrl\",\n};\n\n/**\n * variable to store the flipped version of _MAP from above\n * needed to check if we should use keypress or not when no action\n * is specified\n *\n * @type {Object|undefined}\n */\nvar _REVERSE_MAP;\n\n/**\n * loop through the f keys, f1 to f19 and add them to the map\n * programatically\n */\nfor (var i = 1; i < 20; ++i) {\n  _MAP[111 + i] = \"f\" + i;\n}\n\n/**\n * loop through to map numbers on the numeric keypad\n */\nfor (i = 0; i <= 9; ++i) {\n  // This needs to use a string cause otherwise since 0 is falsey\n  // mousetrap will never fire for numpad 0 pressed as part of a keydown\n  // event.\n  //\n  // @see https://github.com/ccampbell/mousetrap/pull/258\n  _MAP[i + 96] = i.toString();\n}\n\n/**\n * cross browser add event method\n *\n * @param {Element|HTMLDocument} object\n * @param {string} type\n * @param {Function} callback\n * @returns void\n */\nfunction _addEvent(object, type, callback) {\n  if (object.addEventListener) {\n    object.addEventListener(type, callback, false);\n    return;\n  }\n\n  object.attachEvent(\"on\" + type, callback);\n}\n\nfunction _removeEvent(object, type, callback) {\n  if (object.removeEventListener) {\n    object.removeEventListener(type, callback, false);\n    return;\n  }\n\n  object.detachEvent(\"on\" + type, callback);\n}\n\n/**\n * takes the event and returns the key character\n *\n * @param {Event} e\n * @return {string}\n */\nfunction _characterFromEvent(e) {\n  // for keypress events we should return the character as is\n  if (e.type == \"keypress\") {\n    var character = String.fromCharCode(e.which);\n\n    // if the shift key is not pressed then it is safe to assume\n    // that we want the character to be lowercase.  this means if\n    // you accidentally have caps lock on then your key bindings\n    // will continue to work\n    //\n    // the only side effect that might not be desired is if you\n    // bind something like 'A' cause you want to trigger an\n    // event when capital A is pressed caps lock will no longer\n    // trigger the event.  shift+a will though.\n    if (!e.shiftKey) {\n      character = character.toLowerCase();\n    }\n\n    return character;\n  }\n\n  // for non keypress events the special maps are needed\n  if (_MAP[e.which]) {\n    return _MAP[e.which];\n  }\n\n  if (_KEYCODE_MAP[e.which]) {\n    return _KEYCODE_MAP[e.which];\n  }\n\n  // if it is not in the special map\n\n  // with keydown and keyup events the character seems to always\n  // come in as an uppercase character whether you are pressing shift\n  // or not.  we should make sure it is always lowercase for comparisons\n  return String.fromCharCode(e.which).toLowerCase();\n}\n\n/**\n * checks if two arrays are equal\n *\n * @param {Array} modifiers1\n * @param {Array} modifiers2\n * @returns {boolean}\n */\nfunction _modifiersMatch(modifiers1, modifiers2) {\n  return modifiers1.sort().join(\",\") === modifiers2.sort().join(\",\");\n}\n\n/**\n * takes a key event and figures out what the modifiers are\n *\n * @param {Event} e\n * @returns {Array}\n */\nfunction _eventModifiers(e) {\n  var modifiers = [];\n\n  if (e.shiftKey) {\n    modifiers.push(\"shift\");\n  }\n\n  if (e.altKey) {\n    modifiers.push(\"alt\");\n  }\n\n  if (e.ctrlKey) {\n    modifiers.push(\"ctrl\");\n  }\n\n  if (e.metaKey) {\n    modifiers.push(\"meta\");\n  }\n\n  return modifiers;\n}\n\n/**\n * prevents default for this event\n *\n * @param {Event} e\n * @returns void\n */\nfunction _preventDefault(e) {\n  if (e.preventDefault) {\n    e.preventDefault();\n    return;\n  }\n\n  e.returnValue = false;\n}\n\n/**\n * stops propogation for this event\n *\n * @param {Event} e\n * @returns void\n */\nfunction _stopPropagation(e) {\n  if (e.stopPropagation) {\n    e.stopPropagation();\n    return;\n  }\n\n  e.cancelBubble = true;\n}\n\n/**\n * determines if the keycode specified is a modifier key or not\n *\n * @param {string} key\n * @returns {boolean}\n */\nfunction _isModifier(key) {\n  return key == \"shift\" || key == \"ctrl\" || key == \"alt\" || key == \"meta\";\n}\n\n/**\n * reverses the map lookup so that we can look for specific keys\n * to see what can and can't use keypress\n *\n * @return {Object}\n */\nfunction _getReverseMap() {\n  if (!_REVERSE_MAP) {\n    _REVERSE_MAP = {};\n    for (var key in _MAP) {\n      // pull out the numeric keypad from here cause keypress should\n      // be able to detect the keys from the character\n      if (key > 95 && key < 112) {\n        continue;\n      }\n\n      if (_MAP.hasOwnProperty(key)) {\n        _REVERSE_MAP[_MAP[key]] = key;\n      }\n    }\n  }\n  return _REVERSE_MAP;\n}\n\n/**\n * picks the best action based on the key combination\n *\n * @param {string} key - character for key\n * @param {Array} modifiers\n * @param {string=} action passed in\n */\nfunction _pickBestAction(key, modifiers, action) {\n  // if no action was picked in we should try to pick the one\n  // that we think would work best for this key\n  if (!action) {\n    action = _getReverseMap()[key] ? \"keydown\" : \"keypress\";\n  }\n\n  // modifier keys don't work as expected with keypress,\n  // switch to keydown\n  if (action == \"keypress\" && modifiers.length) {\n    action = \"keydown\";\n  }\n\n  return action;\n}\n\n/**\n * Converts from a string key combination to an array\n *\n * @param  {string} combination like \"command+shift+l\"\n * @return {Array}\n */\nfunction _keysFromString(combination) {\n  if (combination === \"+\") {\n    return [\"+\"];\n  }\n\n  combination = combination.replace(/\\+{2}/g, \"+plus\");\n  return combination.split(\"+\");\n}\n\n/**\n * Gets info for a specific key combination\n *\n * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n * @param  {string=} action\n * @returns {Object}\n */\nfunction _getKeyInfo(combination, action) {\n  var keys;\n  var key;\n  var i;\n  var modifiers = [];\n\n  // take the keys from this pattern and figure out what the actual\n  // pattern is all about\n  keys = _keysFromString(combination);\n\n  for (i = 0; i < keys.length; ++i) {\n    key = keys[i];\n\n    // normalize key names\n    if (_SPECIAL_ALIASES[key]) {\n      key = _SPECIAL_ALIASES[key];\n    }\n\n    // if this is not a keypress event then we should\n    // be smart about using shift keys\n    // this will only work for US keyboards however\n    if (action && action != \"keypress\" && _SHIFT_MAP[key]) {\n      key = _SHIFT_MAP[key];\n      modifiers.push(\"shift\");\n    }\n\n    // if this key is a modifier then add it to the list of modifiers\n    if (_isModifier(key)) {\n      modifiers.push(key);\n    }\n  }\n\n  // depending on what the key combination is\n  // we will try to pick the best event for it\n  action = _pickBestAction(key, modifiers, action);\n\n  return {\n    key: key,\n    modifiers: modifiers,\n    action: action,\n  };\n}\n\nfunction _belongsTo(element, ancestor) {\n  if (element === null || element === document) {\n    return false;\n  }\n\n  if (element === ancestor) {\n    return true;\n  }\n\n  return _belongsTo(element.parentNode, ancestor);\n}\n\nexport default function Mousetrap(targetElement) {\n  var self = this;\n\n  targetElement = targetElement || document;\n\n  if (!(self instanceof Mousetrap)) {\n    return new Mousetrap(targetElement);\n  }\n\n  /**\n   * element to attach key events to\n   *\n   * @type {Element}\n   */\n  self.target = targetElement;\n\n  /**\n   * a list of all the callbacks setup via Mousetrap.bind()\n   *\n   * @type {Object}\n   */\n  self._callbacks = {};\n\n  /**\n   * direct map of string combinations to callbacks used for trigger()\n   *\n   * @type {Object}\n   */\n  self._directMap = {};\n\n  /**\n   * keeps track of what level each sequence is at since multiple\n   * sequences can start out with the same sequence\n   *\n   * @type {Object}\n   */\n  var _sequenceLevels = {};\n\n  /**\n   * variable to store the setTimeout call\n   *\n   * @type {null|number}\n   */\n  var _resetTimer;\n\n  /**\n   * temporary state where we will ignore the next keyup\n   *\n   * @type {boolean|string}\n   */\n  var _ignoreNextKeyup = false;\n\n  /**\n   * temporary state where we will ignore the next keypress\n   *\n   * @type {boolean}\n   */\n  var _ignoreNextKeypress = false;\n\n  /**\n   * are we currently inside of a sequence?\n   * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n   *\n   * @type {boolean|string}\n   */\n  var _nextExpectedAction = false;\n\n  /**\n   * resets all sequence counters except for the ones passed in\n   *\n   * @param {Object} doNotReset\n   * @returns void\n   */\n  function _resetSequences(doNotReset) {\n    doNotReset = doNotReset || {};\n\n    var activeSequences = false,\n      key;\n\n    for (key in _sequenceLevels) {\n      if (doNotReset[key]) {\n        activeSequences = true;\n        continue;\n      }\n      _sequenceLevels[key] = 0;\n    }\n\n    if (!activeSequences) {\n      _nextExpectedAction = false;\n    }\n  }\n\n  /**\n   * finds all callbacks that match based on the keycode, modifiers,\n   * and action\n   *\n   * @param {string} character\n   * @param {Array} modifiers\n   * @param {Event|Object} e\n   * @param {string=} sequenceName - name of the sequence we are looking for\n   * @param {string=} combination\n   * @param {number=} level\n   * @returns {Array}\n   */\n  function _getMatches(\n    character,\n    modifiers,\n    e,\n    sequenceName,\n    combination,\n    level\n  ) {\n    var i;\n    var callback;\n    var matches = [];\n    var action = e.type;\n\n    // if there are no events related to this keycode\n    if (!self._callbacks[character]) {\n      return [];\n    }\n\n    // if a modifier key is coming up on its own we should allow it\n    if (action == \"keyup\" && _isModifier(character)) {\n      modifiers = [character];\n    }\n\n    // loop through all callbacks for the key that was pressed\n    // and see if any of them match\n    for (i = 0; i < self._callbacks[character].length; ++i) {\n      callback = self._callbacks[character][i];\n\n      // if a sequence name is not specified, but this is a sequence at\n      // the wrong level then move onto the next match\n      if (\n        !sequenceName &&\n        callback.seq &&\n        _sequenceLevels[callback.seq] != callback.level\n      ) {\n        continue;\n      }\n\n      // if the action we are looking for doesn't match the action we got\n      // then we should keep going\n      if (action != callback.action) {\n        continue;\n      }\n\n      // if this is a keypress event and the meta key and control key\n      // are not pressed that means that we need to only look at the\n      // character, otherwise check the modifiers as well\n      //\n      // chrome will not fire a keypress if meta or control is down\n      // safari will fire a keypress if meta or meta+shift is down\n      // firefox will fire a keypress if meta or control is down\n      if (\n        (action == \"keypress\" && !e.metaKey && !e.ctrlKey) ||\n        _modifiersMatch(modifiers, callback.modifiers)\n      ) {\n        // when you bind a combination or sequence a second time it\n        // should overwrite the first one.  if a sequenceName or\n        // combination is specified in this call it does just that\n        //\n        // @todo make deleting its own method?\n        var deleteCombo = !sequenceName && callback.combo == combination;\n        var deleteSequence =\n          sequenceName &&\n          callback.seq == sequenceName &&\n          callback.level == level;\n        if (deleteCombo || deleteSequence) {\n          self._callbacks[character].splice(i, 1);\n        }\n\n        matches.push(callback);\n      }\n    }\n\n    return matches;\n  }\n\n  /**\n   * actually calls the callback function\n   *\n   * if your callback function returns false this will use the jquery\n   * convention - prevent default and stop propogation on the event\n   *\n   * @param {Function} callback\n   * @param {Event} e\n   * @returns void\n   */\n  function _fireCallback(callback, e, combo, sequence) {\n    // if this event should not happen stop here\n    if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n      return;\n    }\n\n    if (callback(e, combo) === false) {\n      _preventDefault(e);\n      _stopPropagation(e);\n    }\n  }\n\n  /**\n   * handles a character key event\n   *\n   * @param {string} character\n   * @param {Array} modifiers\n   * @param {Event} e\n   * @returns void\n   */\n  self._handleKey = function (character, modifiers, e) {\n    var callbacks = _getMatches(character, modifiers, e);\n    var i;\n    var doNotReset = {};\n    var maxLevel = 0;\n    var processedSequenceCallback = false;\n\n    // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n    for (i = 0; i < callbacks.length; ++i) {\n      if (callbacks[i].seq) {\n        maxLevel = Math.max(maxLevel, callbacks[i].level);\n      }\n    }\n\n    // loop through matching callbacks for this key event\n    for (i = 0; i < callbacks.length; ++i) {\n      // fire for all sequence callbacks\n      // this is because if for example you have multiple sequences\n      // bound such as \"g i\" and \"g t\" they both need to fire the\n      // callback for matching g cause otherwise you can only ever\n      // match the first one\n      if (callbacks[i].seq) {\n        // only fire callbacks for the maxLevel to prevent\n        // subsequences from also firing\n        //\n        // for example 'a option b' should not cause 'option b' to fire\n        // even though 'option b' is part of the other sequence\n        //\n        // any sequences that do not match here will be discarded\n        // below by the _resetSequences call\n        if (callbacks[i].level != maxLevel) {\n          continue;\n        }\n\n        processedSequenceCallback = true;\n\n        // keep a list of which sequences were matches for later\n        doNotReset[callbacks[i].seq] = 1;\n        _fireCallback(\n          callbacks[i].callback,\n          e,\n          callbacks[i].combo,\n          callbacks[i].seq\n        );\n        continue;\n      }\n\n      // if there were no sequence matches but we are still here\n      // that means this is a regular match so we should fire that\n      if (!processedSequenceCallback) {\n        _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n      }\n    }\n\n    // if the key you pressed matches the type of sequence without\n    // being a modifier (ie \"keyup\" or \"keypress\") then we should\n    // reset all sequences that were not matched by this event\n    //\n    // this is so, for example, if you have the sequence \"h a t\" and you\n    // type \"h e a r t\" it does not match.  in this case the \"e\" will\n    // cause the sequence to reset\n    //\n    // modifier keys are ignored because you can have a sequence\n    // that contains modifiers such as \"enter ctrl+space\" and in most\n    // cases the modifier key will be pressed before the next key\n    //\n    // also if you have a sequence such as \"ctrl+b a\" then pressing the\n    // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n    //\n    // the \"keydown\" is expected when there is a modifier, but the\n    // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n    // after and that causes the sequence to reset\n    //\n    // we ignore keypresses in a sequence that directly follow a keydown\n    // for the same character\n    var ignoreThisKeypress = e.type == \"keypress\" && _ignoreNextKeypress;\n    if (\n      e.type == _nextExpectedAction &&\n      !_isModifier(character) &&\n      !ignoreThisKeypress\n    ) {\n      _resetSequences(doNotReset);\n    }\n\n    _ignoreNextKeypress = processedSequenceCallback && e.type == \"keydown\";\n  };\n\n  /**\n   * handles a keydown event\n   *\n   * @param {Event} e\n   * @returns void\n   */\n  function _handleKeyEvent(e) {\n    // normalize e.which for key events\n    // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n    if (typeof e.which !== \"number\") {\n      e.which = e.keyCode;\n    }\n\n    var character = _characterFromEvent(e);\n\n    // no character found then stop\n    if (!character) {\n      return;\n    }\n\n    // need to use === for the character check because the character can be 0\n    if (e.type == \"keyup\" && _ignoreNextKeyup === character) {\n      _ignoreNextKeyup = false;\n      return;\n    }\n\n    self.handleKey(character, _eventModifiers(e), e);\n  }\n\n  /**\n   * called to set a 1 second timeout on the specified sequence\n   *\n   * this is so after each key press in the sequence you have 1 second\n   * to press the next key before you have to start over\n   *\n   * @returns void\n   */\n  function _resetSequenceTimer() {\n    clearTimeout(_resetTimer);\n    _resetTimer = setTimeout(_resetSequences, 1000);\n  }\n\n  /**\n   * binds a key sequence to an event\n   *\n   * @param {string} combo - combo specified in bind call\n   * @param {Array} keys\n   * @param {Function} callback\n   * @param {string=} action\n   * @returns void\n   */\n  function _bindSequence(combo, keys, callback, action) {\n    // start off by adding a sequence level record for this combination\n    // and setting the level to 0\n    _sequenceLevels[combo] = 0;\n\n    /**\n     * callback to increase the sequence level for this sequence and reset\n     * all other sequences that were active\n     *\n     * @param {string} nextAction\n     * @returns {Function}\n     */\n    function _increaseSequence(nextAction) {\n      return function () {\n        _nextExpectedAction = nextAction;\n        ++_sequenceLevels[combo];\n        _resetSequenceTimer();\n      };\n    }\n\n    /**\n     * wraps the specified callback inside of another function in order\n     * to reset all sequence counters as soon as this sequence is done\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _callbackAndReset(e) {\n      _fireCallback(callback, e, combo);\n\n      // we should ignore the next key up if the action is key down\n      // or keypress.  this is so if you finish a sequence and\n      // release the key the final key will not trigger a keyup\n      if (action !== \"keyup\") {\n        _ignoreNextKeyup = _characterFromEvent(e);\n      }\n\n      // weird race condition if a sequence ends with the key\n      // another sequence begins with\n      setTimeout(_resetSequences, 10);\n    }\n\n    // loop through keys one at a time and bind the appropriate callback\n    // function.  for any key leading up to the final one it should\n    // increase the sequence. after the final, it should reset all sequences\n    //\n    // if an action is specified in the original bind call then that will\n    // be used throughout.  otherwise we will pass the action that the\n    // next key in the sequence should match.  this allows a sequence\n    // to mix and match keypress and keydown events depending on which\n    // ones are better suited to the key provided\n    for (var i = 0; i < keys.length; ++i) {\n      var isFinal = i + 1 === keys.length;\n      var wrappedCallback = isFinal\n        ? _callbackAndReset\n        : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n      _bindSingle(keys[i], wrappedCallback, action, combo, i);\n    }\n  }\n\n  /**\n   * binds a single keyboard combination\n   *\n   * @param {string} combination\n   * @param {Function} callback\n   * @param {string=} action\n   * @param {string=} sequenceName - name of sequence if part of sequence\n   * @param {number=} level - what part of the sequence the command is\n   * @returns void\n   */\n  function _bindSingle(combination, callback, action, sequenceName, level) {\n    // store a direct mapped reference for use with Mousetrap.trigger\n    self._directMap[combination + \":\" + action] = callback;\n\n    // make sure multiple spaces in a row become a single space\n    combination = combination.replace(/\\s+/g, \" \");\n\n    var sequence = combination.split(\" \");\n    var info;\n\n    // if this pattern is a sequence of keys then run through this method\n    // to reprocess each pattern one key at a time\n    if (sequence.length > 1) {\n      _bindSequence(combination, sequence, callback, action);\n      return;\n    }\n\n    info = _getKeyInfo(combination, action);\n\n    // make sure to initialize array if this is the first time\n    // a callback is added for this key\n    self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n    // remove an existing match if there is one\n    _getMatches(\n      info.key,\n      info.modifiers,\n      { type: info.action },\n      sequenceName,\n      combination,\n      level\n    );\n\n    // add this call back to the array\n    // if it is a sequence put it at the beginning\n    // if not put it at the end\n    //\n    // this is important because the way these are processed expects\n    // the sequence ones to come first\n    self._callbacks[info.key][sequenceName ? \"unshift\" : \"push\"]({\n      callback: callback,\n      modifiers: info.modifiers,\n      action: info.action,\n      seq: sequenceName,\n      level: level,\n      combo: combination,\n    });\n  }\n\n  /**\n   * binds multiple combinations to the same callback\n   *\n   * @param {Array} combinations\n   * @param {Function} callback\n   * @param {string|undefined} action\n   * @returns void\n   */\n  self._bindMultiple = function (combinations, callback, action) {\n    for (var i = 0; i < combinations.length; ++i) {\n      _bindSingle(combinations[i], callback, action);\n    }\n  };\n\n  self.enable = function () {\n    _addEvent(targetElement, \"keypress\", _handleKeyEvent);\n    _addEvent(targetElement, \"keydown\", _handleKeyEvent);\n    _addEvent(targetElement, \"keyup\", _handleKeyEvent);\n  };\n\n  self.disable = function () {\n    _removeEvent(targetElement, \"keypress\", _handleKeyEvent);\n    _removeEvent(targetElement, \"keydown\", _handleKeyEvent);\n    _removeEvent(targetElement, \"keyup\", _handleKeyEvent);\n  };\n\n  self.enable();\n}\n\n/**\n * binds an event to mousetrap\n *\n * can be a single key, a combination of keys separated with +,\n * an array of keys, or a sequence of keys separated by spaces\n *\n * be sure to list the modifier keys first to make sure that the\n * correct key ends up getting bound (the last key in the pattern)\n *\n * @param {string|Array} keys\n * @param {Function} callback\n * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n * @returns void\n */\nMousetrap.prototype.bind = function (keys, callback, action) {\n  var self = this;\n  keys = keys instanceof Array ? keys : [keys];\n  self._bindMultiple.call(self, keys, callback, action);\n  return self;\n};\n\n/**\n * unbinds an event to mousetrap\n *\n * the unbinding sets the callback function of the specified key combo\n * to an empty function and deletes the corresponding key in the\n * _directMap dict.\n *\n * TODO: actually remove this from the _callbacks dictionary instead\n * of binding an empty function\n *\n * the keycombo+action has to be exactly the same as\n * it was defined in the bind method\n *\n * @param {string|Array} keys\n * @param {string} action\n * @returns void\n */\nMousetrap.prototype.unbind = function (keys, action) {\n  var self = this;\n  return self.bind.call(self, keys, function () {}, action);\n};\n\n/**\n * triggers an event that has already been bound\n *\n * @param {string} keys\n * @param {string=} action\n * @returns void\n */\nMousetrap.prototype.trigger = function (keys, action) {\n  var self = this;\n  if (self._directMap[keys + \":\" + action]) {\n    self._directMap[keys + \":\" + action]({}, keys);\n  }\n  return self;\n};\n\n/**\n * resets the library back to its initial state.  this is useful\n * if you want to clear out the current keyboard shortcuts and bind\n * new ones - for example if you switch to another page\n *\n * @returns void\n */\nMousetrap.prototype.reset = function () {\n  var self = this;\n  self._callbacks = {};\n  self._directMap = {};\n  return self;\n};\n\n/**\n * should we stop this event before firing off callbacks\n *\n * @param {Event} e\n * @param {Element} element\n * @return {boolean}\n */\nMousetrap.prototype.stopCallback = function (e, element) {\n  var self = this;\n\n  // if the element has the class \"mousetrap\" then no need to stop\n  if ((\" \" + element.className + \" \").indexOf(\" mousetrap \") > -1) {\n    return false;\n  }\n\n  if (_belongsTo(element, self.target)) {\n    return false;\n  }\n\n  // stop for input, select, and textarea\n  return (\n    element.tagName == \"INPUT\" ||\n    element.tagName == \"SELECT\" ||\n    element.tagName == \"TEXTAREA\" ||\n    element.isContentEditable\n  );\n};\n\n/**\n * exposes _handleKey publicly so it can be overwritten by extensions\n */\nMousetrap.prototype.handleKey = function () {\n  var self = this;\n  return self._handleKey.apply(self, arguments);\n};\n\n/**\n * allow custom key mappings\n */\nMousetrap.addKeycodes = function (object) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key)) {\n      _MAP[key] = object[key];\n    }\n  }\n  _REVERSE_MAP = null;\n};\n\n/**\n * Init the global mousetrap functions\n *\n * This method is needed to allow the global mousetrap functions to work\n * now that mousetrap is a constructor function.\n */\nMousetrap.init = function () {\n  var documentMousetrap = Mousetrap(document);\n  for (var method in documentMousetrap) {\n    if (method.charAt(0) !== \"_\") {\n      Mousetrap[method] = (function (method) {\n        return function () {\n          return documentMousetrap[method].apply(documentMousetrap, arguments);\n        };\n      })(method);\n    }\n  }\n};\n", "import {Event,CustomEvent,Element} from '../dom/core'\n\nlet isApple = try (global.navigator.platform or '').match(/iPhone|iPod|iPad|Mac/)\n\nexport def use_events_hotkey\n\tyes\n\nimport {humanize,htmlify} from './hotkey.shared'\n\nconst Globals = {\"esc\": yes}\n\nclass HotkeyEvent < CustomEvent\n\t\n\tdef @focus expr\n\t\tlet el = this.target\n\t\tlet doc = el.ownerDocument\n\t\t\n\t\tif expr\n\t\t\tel = el.querySelector(expr) or el.closest(expr) or doc.querySelector(expr)\n\n\t\tif el == doc.body\n\t\t\tdoc.activeElement.blur! unless doc.activeElement == doc.body\n\t\telse\n\t\t\tel.focus!\n\t\t\t\n\t\treturn yes\n\n\tdef @repeat\n\t\treturn yes\n\nimport Mousetrap from './mousetrap'\n\nconst stopCallback = do |e,el,combo|\t\n\tif el.tagName == 'INPUT' && (combo == 'down' or combo == 'up')\n\t\treturn false\n\t\n\tif el.tagName == 'INPUT' || el.tagName == 'SELECT' || el.tagName == 'TEXTAREA'\n\t\tif Globals[combo]\n\t\t\te.#inInput = yes\n\t\t\te.#inEditable = yes\n\t\t\treturn false\n\t\treturn true\n\t\t\n\tif el.contentEditable && (el.contentEditable == 'true' || el.contentEditable == 'plaintext-only')\n\t\tif Globals[combo]\n\t\t\te.#inEditable = yes\n\t\t\treturn false\n\t\treturn true\n\t\t\n\treturn false\n\nexport const hotkeys = new class HotKeyManager\n\tdef constructor\n\t\tcombos = {'*': {}}\n\t\tidentifiers = {}\n\t\tlabels = {}\n\t\thandler = handle.bind(self)\n\t\tmousetrap = null\n\t\thothandler = handle.bind(self)\n\n\tdef trigger combo\n\t\tmousetrap..trigger(combo)\n\n\tdef register key,mods = {}\n\t\tunless mousetrap\n\t\t\tmousetrap = Mousetrap(document)\n\t\t\tmousetrap.stopCallback = stopCallback\n\n\t\tunless combos[key]\n\t\t\tcombos[key] = yes\n\t\t\tmousetrap.bind(key,handler)\n\n\t\tif mods.capture or mods.force\n\t\t\tGlobals[key] = yes\n\t\tself\n\t\t\n\tdef comboIdentifier combo\n\t\tidentifiers[combo] ||= combo.replace(/\\+/g,'_').replace(/\\ /g,'-').replace(/\\*/g,'all').replace(/\\|/g,' ')\n\n\tdef humanize combo, platform = 'auto'\n\t\thumanize(combo,platform)\n\n\tdef htmlify combo, platform = 'auto'\n\t\thtmlify(combo,platform)\n\t\n\tdef matchCombo str\n\t\tyes\n\n\tdef handle e\\Event, combo\n\t\tlet source = e.target and e.target.#hotkeyTarget or e.target or global.document.body\n\t\tlet targets\\HTMLElement[] = Array.from(document.querySelectorAll('[data-hotkey]'))\n\t\tlet root = source.ownerDocument\n\t\tlet group = source\n\t\t\n\t\t# find the closest hotkey \n\t\twhile group and group != root\n\t\t\tif group.hotkeys === true\n\t\t\t\tbreak\n\t\t\tgroup = group.parentNode\n\n\t\ttargets = targets.reverse!.filter do |el|\n\t\t\treturn no unless el.#hotkeyCombos and el.#hotkeyCombos[combo]\n\n\t\t\tlet par = el\n\t\t\twhile par and par != root\n\t\t\t\tif par.hotkeys === false\n\t\t\t\t\treturn no\n\t\t\t\tpar = par.parentNode\n\t\t\treturn yes\n\t\t\t\n\t\treturn unless targets.length\n\t\n\t\tlet detail = {combo: combo, originalEvent: e, targets: targets}\n\t\tlet event = new CustomEvent('hotkey', bubbles: true, detail: detail)\n\t\tevent.#extendType(HotkeyEvent)\n\t\t\n\t\tevent.originalEvent = e\n\t\tevent.hotkey = combo\n\t\t\n\t\tsource.dispatchEvent(event)\n\t\tlet handlers = []\n\n\t\tfor receiver in targets\n\t\t\tfor handler in receiver.#hotkeyHandlers\n\t\t\t\tif handler.#combos[combo]\n\t\t\t\t\tif !e.#inEditable or (handler.capture? or handler.params.force)\n\t\t\t\t\t\tlet el = handler.#target\n\t\t\t\t\t\tif group.contains(el) or el.contains(group) or (handler.global?)\n\t\t\t\t\t\t\thandlers.push(handler)\n\n\t\tfor handler,i in handlers\n\t\t\tif !e.repeat or handler.params.repeat\n\t\t\t\thandler.handleEvent(event)\n\n\t\t\te..preventDefault! if !handler.passive? or event.#defaultPrevented\n\t\t\tbreak unless handler.passive?\n\t\tself\n\nconst DefaultHandler = do(e,state)\n\tlet el = state.element\n\t\n\tif el isa Element\n\t\tif el.matches('input,textarea,select,option')\n\t\t\tel.focus!\n\t\telse\n\t\t\tel.click!\n\treturn\n\t\nDefaultHandler.passive = yes\n\nextend class Element\n\t\t\n\tdef on$hotkey mods, scope, handler, o\n\t\t#hotkeyHandlers ||= []\n\t\t#hotkeyHandlers.push(handler)\n\t\t# addEventListener('hotkey',handler,o)\n\t\t\n\t\thandler.#target = self\n\t\t# add a default handler\n\t\tmods.$_ ||= [DefaultHandler]\n\t\t\n\t\tmods.#visit = do #updateHotKeys!\n\t\t#updateHotKeys!\n\t\treturn handler\n\t\t\n\tdef #updateHotKeys\n\t\tlet all = {}\n\t\tlet isApple = (global.navigator.platform or '').match(/iPhone|iPod|iPad|Mac/)\n\t\tfor handler in #hotkeyHandlers\n\t\t\tlet mods = handler.params\n\t\t\tlet key = mods.options[0]\n\t\t\tlet prev = handler.#key\n\t\t\tif handler.#key =? key\n\t\t\t\thandler.#combos = {}\n\t\t\t\tlet combos = key.replace(/\\bmod\\b/g,isApple ? 'command' : 'ctrl')\n\t\t\t\tfor combo in combos.split('|')\n\t\t\t\t\thotkeys.register(combo,mods)\n\t\t\t\t\thandler.#combos[combo] = yes\n\t\t\tObject.assign(all,handler.#combos)\n\n\t\t#hotkeyCombos = all\n\t\tdataset.hotkey = Object.keys(all).join(' ')\n\t\tself", "\n# class State\n# \tstatic instance = null\n# \tconstructor\n# \t\tself.cells = {}\n# \tdef setCell cell, value\n# \t\tself.cells[cell] = value if value != \"\"\nconst log = console.log\n# let state = new State!\nconst cellHeight= 100\nconst cellWidth= 100\nlet mode = \"normal\"\nlet clipboard = \"\"\nlet draggedCell = null\nlet cell =\n\tx: 0\n\ty: 0 \nlog \"cell\", cell\n# import string\n# def divmod_excel n\n# \t# a, b = divmod(n, 26)\n# \tlet a  = n // 26\n# \tlet b  = n % 26\n# \tif b == 0\n# \t\treturn a - 1, b + 26\n# \treturn a, b\n# def to_excel num\n# \tlet chars = [\"e\"]\n# \twhile num > 0\n# \t\tlet tmp = divmod_excel(num)\n# \t\tconsole.log \"tmp is {tmp}\"\n# \t\tnum = tmp[0]\n# \t\tchars.push(String.fromCharCode([tmp[1] - 1]))\n# \treturn chars.reverse().join(\"\")\n# window.to_excel = to_excel\nlet map = {}\n# def convertBases num, radix=10\n# \tlet keys = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n# \t#   if (!(radix >= 2 && radix <= keys.length)) throw new RangeError(\"toBase() radix argument must be between 2 and \" + keys.length)\n# \tlet isNegative=false\n# \tif (num < 0) \n# \t\tisNegative = true\n# \t# if (isNaN(num = Math.abs(+num))) return NaN\n\n# \tlet output = [];\n# \twhile num !=0\n# \t\tlet index = num % radix;\n# \t\toutput.unshift(keys[index]);\n# \t\tnum = Math.trunc(num / radix);\n# \t# } while (num != 0);\n# \tif (isNegative) \n# \t\toutput.unshift('-')\n# \treturn output\n# def toExcel num\n# \tconst digits = convertBases num, 26\n# \tconst numberDigits = digits.map(do(d) typeof d === \"string\" ? d.charCodeAt(0) - 65 : d )\n# \tconst letters = numberDigits.map(do(d) \tString.fromCharCode(d+65))\n# \tconst str = letters.join(\"\")\ndef toExcel n\n\t#   function colName(n) {\n\tlet ordA = 'A'.charCodeAt(0);\n\tlet ordZ = 'Z'.charCodeAt(0);\n\tlet len = ordZ - ordA + 1;\n\n\tlet s = \"\";\n\twhile n >= 0 \n\t\ts = String.fromCharCode(n % len + ordA) + s;\n\t\tn = Math.floor(n / len) - 1;\n\treturn s;\n\n# def computeFormula formula\n# \tif formula.startsWith \"=\"\n# \t\treturn  eval \"({formula})\"\n# \treturn formula + \" (nothing)\"\ndef evalutateFormula formula, context\n\tif formula.startsWith \"=\"\n\t\ttry\n\t\t\tlet regex = /[A-Z]+[0-9]+/\n\t\t\tlet replaced = formula.substring(1).replace(regex, do(e) evalutateFormula context[e], context)\n\t\t\t# log replaced\n\t\t\treturn window.eval \"({replaced})\"\n\t\tcatch e\n\t\t\treturn \"#ERROR {e}\"\n\treturn formula\n# def isPointInsideElement element, x, y\n# \tconst rect = element.getBoundingClientRect()\n# \tlog \"rect\", rect\n# \tlog \"x,y\",x,y\n\t# return !(x < rect.left  or x > rect.right or y < rect.top or y > rect.botton)\ndef isPointInsideElement event, element\n\tconst rect = element.getBoundingClientRect();\n\tconst x = event.clientX;\n\treturn false if (x < rect.left || x >= rect.right) \n\tconst y = event.clientY;\n\treturn false if (y < rect.top || y >= rect.bottom) \n\treturn true;\nconst  isBetween =  do(x, low, high) x >= low && x <= high\ntag Cell \n\tprop x \n\tprop y\n\t# def setup\n\t# \tself.name = \n\tdef handlechange\n\t\tmap[(toExcel x) + y] = $input.value if !($input.value == \"\" && !map[(toExcel x) + y])\n\t\twindow.localStorage.setItem(\"spreadsheet\", JSON.stringify(map))\n\tautorender=1fps\n\tdef edit \n\t\tif (x === cell.x) && (y === cell.y)\n\t\t\tmode=\"edit\"\n\t\t\t$input.focus()\n\tdef esc\n\t\t$input.blur()\n\t\tmode=\"normal\"\n\tdef handleTouch evt\n\t\tcell = \n\t\t\tx: x\n\t\t\ty: y\n\t\tconst isInside = isPointInsideElement(evt, $input)\n\t\tlog \"isinside {isInside}\"\n\t\tif isInside\n\t\t\tmode=\"edit\"\n\t\telse \n\t\t\tmode=\"normal\"\n\tdef dragover\n\t\tdraggedCell = \n\t\t\tx:x\n\t\t\ty:y\n\tdef dragend\n\t\tconst lowx = Math.min(cell.x, draggedCell.x)\n\t\tconst highx = Math.max(cell.x, draggedCell.x)\n\t\tconst lowy = Math.min(cell.y, draggedCell.y)\n\t\tconst highy = Math.max(cell.y, draggedCell.y)\n\t\tfor i in [lowx ... highx]\n\t\t\tfor j in [lowy .. highy]\n\t\t\t\tmap[(toExcel i) + j] = map[(toExcel x) + y] if (toExcel x) + y !== \"\"\n\t\tdraggedCell = null\n\t\twindow.localStorage.setItem(\"spreadsheet\", JSON.stringify(map))\n\tdef dragstart\n\t\tcell = \n\t\t\tx:x\n\t\t\ty:y\n\tdef render\n\t\tconst name = (toExcel x) + y\n\t\tconst isInDragSelection = draggedCell !== null && isBetween(x, Math.min(cell.x, draggedCell.x), Math.max(cell.x, draggedCell.x))  && isBetween(y, Math.min(cell.y, draggedCell.y), Math.max(cell.y, draggedCell.y))\n\t\tconst color = (x === cell.x) && (y === cell.y) ? \"red\" : (isInDragSelection ? \"blue\" :  \"black\")\n\t\t<self[display:inline-block w:{cellWidth}px h:{cellHeight}px border:3px solid {color} d:flex fld:column]\n\t\t@hotkey(\"e\").passive.prevent=(edit)\n\t\t@hotkey(\"x\").passive.prevent.stop=(esc)\n\t\t# @touch.outside\n\t\t@click=(handleTouch)\n\t\t\t# @drag.log(\"drag\")\n\t\t\t@dragend=(dragend)\n\t\t\t# @dragenter.log(\"dragenter\")\n\t\t\t# @dragleave.log(\"dragleave\")\n\t\t\t@dragover=(dragover)\n\t\t\t@dragstart=(dragstart)\n\t\t\t# @drop=(drop\")\n\t\tdraggable\n\t\t>\n\t\t\t<div> name\n\t\t\t<div>\n\t\t\t\t<input$input .mousetrap [w:{cellWidth}px display:inline-block] type='text' readonly=(mode===\"normal\") @change=(handlechange) value=(map[name] || \"\")>\n\t\t\t<div> evalutateFormula((map[name] || \"\"), map)\n\n\ndef decimalPart n\n\tn - Math.floor(n)\ntag SpreadSheetHolder\n\tscrollY = 0\n\tindex = 0\n\txindex = 0\n\tautorender=1fps\n\tdef mount\n\t\tcenter = \n\t\t\tx: 0 # $container.clientWidth/2,\n\t\t\ty: 0# $container.clientHeight/2 \n\t\t$container.scroll(0,0)\n\t\tlog \"mount\"\n\t\tconst storage = window.localStorage.getItem('spreadsheet') || \"\\{\\}\";\n\t\t# if storage\n\t\tmap = JSON.parse(storage)\n\t\trender\n\tdef handleScroll \n\t\tdy=  $container.scrollTop - $container.clientHeight/2\n\t\tdx = $container.scrollLeft -  $container.clientWidth/2\n\t\tindex  =  index + ($container.scrollTop - center.y)/cellHeight\n\t\txindex =  xindex + ($container.scrollLeft - center.x)/cellWidth\n\t\tcenter =\n\t\t\tx: $container.clientWidth/2 + (dx % cellHeight)\n\t\t\ty:  $container.clientHeight/2 + (dy % cellHeight)\n\t\t$container.scroll(center.x, center.y)\n\tdef left\n\t\tcell.x = Math.max 0, cell.x - 1\n\t\txindex = Math.max 0, xindex - 1\n\t\tmode=\"normal\"\n\tdef right\n\t\tcell.x = Math.max 0, cell.x + 1\n\t\txindex = cell.x - 7\n\t\tmode=\"normal\"\n\tdef up\n\t\tcell.y = Math.max 0, cell.y - 1\n\t\tindex =  Math.max 0, index - 1\n\t\tmode=\"normal\"\n\tdef down \n\t\tcell.y = Math.max 0, cell.y + 1\n\t\tindex =  Math.max 0, index + 1\n\t\tmode=\"normal\"\n\tdef copy\n\t\tclipboard = map[(toExcel cell.x) + cell.y]\n\t\twindow.navigator.clipboard.writeText(map[(toExcel cell.x) + cell.y])\n\tdef paste\n\t\tmap[(toExcel cell.x) + cell.y] = clipboard\n\tdef render\n\t\t<self\n\t\t\t@hotkey(\"left\")=(left)\n\t\t\t@hotkey(\"right\")=(right)\n\t\t\t@hotkey(\"up\")=(up)\n\t\t \t@hotkey(\"down\")=(down)\n\t\t\t@hotkey(\"c\")=(copy)\n\t\t\t@hotkey(\"p\")=(paste)\n\t\t>\n\t\t\t<h1> \"SpreadSheet\"\n\t\t\t# JSON.stringify(map)\n\t\t\t\"xindex = \" ,  xindex, \" yindex = \", index\n\t\t\t\"mode = {mode}\"\n\t\t\t\"cell = {JSON.stringify(cell)}\"\n\t\t\t<div$container.container[h:100vh w:100vw of:scroll] @scroll(window).log.prevent=(handleScroll)>\n\t\t\t\t<div [h:{decimalPart(index)}px]>\n\t\t\t\tfor y in [0 ... 10]\n\t\t\t\t\t<div.row[white-space: nowrap d:flex fld:row]>\n\t\t\t\t\t\tfor x in [0 ... 20] \n\t\t\t\t\t\t\t<Cell x=Math.floor(x + xindex) y=Math.floor(y + index)>  # if (x + xindex >=0) && (y + index) >=0\nexport default SpreadSheetHolder", "import './assets/reset.css'\nimport SpreadSheetHolder from \"./SpreadSheet.imba\"\nglobal css body\n\tp:10\ntag App\n\tdef render\n\t\t<self>\n\t\t\t<SpreadSheetHolder>\n\nimba.mount <App>"],
  "mappings": "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",
  "names": []
}
